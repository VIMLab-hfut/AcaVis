#coding:utf-8
import numpy as np
import sklearn
import sklearn.cluster
import scipy.sparse as sp
import math
import torch
import torch.optim as optim
import torch.nn as nn
import torch.nn.functional as F
from torch.nn.parameter import Parameter
import networkx as nx
import matplotlib.pyplot as plt

## Data handling
from loss_functions import loss_modularity
from modularity import make_modularity_matrix


def normalize(mx):
    """Row-normalize sparse matrix"""
    rowsum = np.array(mx.sum(1), dtype=np.float32)
    r_inv = np.power(rowsum, -1).flatten()
    r_inv[np.isinf(r_inv)] = 0.
    r_mat_inv = sp.diags(r_inv)
    mx = r_mat_inv.dot(mx)
    return mx

def mx_to_sparse_tensor(mx):
    """Convert a scipy sparse matrix to a torch sparse tensor."""
    mx = mx.tocoo().astype(np.float32)
    indices = torch.from_numpy(np.vstack((mx.row, mx.col)).astype(np.int64))
    values = torch.from_numpy(mx.data)
    shape = torch.Size(mx.shape)
    return torch.sparse.FloatTensor(indices, values, shape)


import xlrd
import xlwt


def combine_arr(array):
    author_per_year_arr = []
    for i in range(len(array)):
        a2 = array[i + 1:]
        for j in range(len(a2)):
            myobj = {}
            myobj["source"] = array[i]
            myobj["target"] = a2[j]
            author_per_year_arr.append(myobj)
    return author_per_year_arr


def read_excel():
    # 打开文件
    workBook = xlrd.open_workbook('./year-title-keyword2016.xlsx')
    # 1.获取sheet的名字
    # 1.1 获取所有sheet的名字(list类型)
    allSheetNames = workBook.sheet_names()
    print(allSheetNames)
    # 1.2 按索引号获取sheet的名字（string类型）
    sheet1Name = workBook.sheet_names()[0]
    print(sheet1Name)

    # 2. 获取sheet内容
    # 2.1 法1：按索引号获取sheet内容
    sheet1_content1 = workBook.sheet_by_index(0)  # sheet索引从0开始
    # # 2.2 法2：按sheet名字获取sheet内容
    # sheet1_content2 = workBook.sheet_by_name('Sheet1')

    # 3. sheet的名称，行数，列数
    nrows = sheet1_content1.nrows
    ncols = sheet1_content1.ncols
    print(sheet1_content1.name, sheet1_content1.nrows, sheet1_content1.ncols)
    authorArr = []

    authorArr_feature = []
    author_link_arr = []

    # 4. 获取整行和整列的值（数组）
    for i in range(0, nrows):
        rows = sheet1_content1.row_values(i)
        # print(rows[3].split(";"))
        author_per_year_arr = rows[3].split(";")
        author_link_arr.append(combine_arr(author_per_year_arr))
        for j in rows[3].split(";"):
            # print(j)
            obj = {}
            if ((j in authorArr) == False):
                authorArr.append(j)

            else:
                print("-----------------------------", j)

        for k in rows[2].split(";"):
            # print(j)

            if ((k in authorArr_feature) == False):
                authorArr_feature.append(k)
            else:
                print("-----------------------------", k)

        # 4. 获取整行和整列的值（数组）

    per_authorArr_feature = [[0] * len(authorArr_feature) for i in range(len(authorArr))]
    for i in range(0, nrows):
        rows = sheet1_content1.row_values(i)

        # 首先找到某篇文章作者数组
        for j in rows[3].split(";"):
            # print(j)
            # 对每个作者遍历对应特征
            for k in rows[2].split(";"):
                # 寻找在特征数组中下标和姓名数组中下标
                per_authorArr_feature[authorArr.index(j)][authorArr_feature.index(k)] = 1

        rows = ("**").join(rows)

    print("-----------------------------", per_authorArr_feature)

    output = open('data.txt', 'w+')
    for i in range(len(per_authorArr_feature)):
        for j in range(len(per_authorArr_feature[i])):
            output.write(str(per_authorArr_feature[i][j]))
            output.write(' ')
        output.write('\n')
    output.close()
    return per_authorArr_feature
def load_data(G):
    """Load network (graph)"""
    # G.add_edge(0, 2, w=1)
    # G.add_edge(0, 3, w=1)
    # G.add_edge(0, 1, w=1)
    # adj = nx.to_scipy_sparse_matrix(G).tocoo()
    adj = nx.to_scipy_sparse_matrix(G).tocoo()
    # adj = G.edges
    print("adj=", adj)

    adj = normalize(adj+sp.eye(adj.shape[0]))
    print("adj2=", adj)

    adj = mx_to_sparse_tensor(adj)
    print("adj3=", adj)
    # 创建（3，3）的全1矩阵
    arr = np.ones((3, 3))
    # 创建张量，默认存放在CPU
    t1 = torch.tensor(arr)
    # features = torch.eye(len(G.nodes()),345)
    # features[0][1] = 1
    # features[0][343] = 1
    features=read_excel()
    print("features=", features)
    features=torch.Tensor(features)
    print("features=", features)
    features = features.to_sparse()

    print("————————————————————————————————————————————————————————————————————————————")
    return adj,features


## Model
class GraphConvolution(nn.Module):
    '''
    Simple GCN layer, similar to https://arxiv.org/abs/1609.02907
    '''

    def __init__(self, in_features, out_features, bias=True):
        super(GraphConvolution, self).__init__()
        self.in_features = in_features
        self.out_features = out_features
        self.weight = Parameter(torch.FloatTensor(in_features, out_features))
        if bias:
            self.bias = Parameter(torch.FloatTensor(out_features))
        else:
            self.register_parameter('bias', None)
        self.reset_parameters()

    def reset_parameters(self):
        stdv = 1. / math.sqrt(self.weight.size(1))
        self.weight.data.uniform_(-stdv, stdv)
        if self.bias is not None:
            self.bias.data.uniform_(-stdv, stdv)

    def forward(self, input, adj):
        support = torch.mm(input, self.weight)
        output = torch.spmm(adj, support)
        if self.bias is not None:
            return output + self.bias
        else:
            return output

    def __repr__(self):
        return self.__class__.__name__ + ' (' \
               + str(self.in_features) + ' -> ' \
               + str(self.out_features) + ')'


class GCN(nn.Module):
    '''
    2-layer GCN with dropout
    '''

    def __init__(self, nfeat, nhid, nout, dropout):
        super(GCN, self).__init__()
        self.gc1 = GraphConvolution(nfeat, nhid)
        self.gc2 = GraphConvolution(nhid, nout)
        self.dropout = dropout

    def forward(self, x, adj):
        x = F.relu(self.gc1(x, adj))
        x = F.dropout(x, self.dropout, training=self.training)
        x = self.gc2(x, adj)
        return x


def cluster(data, k, num_iter, init=None, cluster_temp=5):
    '''
    pytorch (differentiable) implementation of soft k-means clustering.
    '''
    # normalize x so it lies on the unit sphere
    data = torch.diag(1. / torch.norm(data, p=2, dim=1)) @ data
    # use kmeans++ initialization if nothing is provided
    if init is None:
        data_np = data.detach().numpy()
        norm = (data_np ** 2).sum(axis=1)
        init = sklearn.cluster.k_means_._k_init(data_np, k, norm, sklearn.utils.check_random_state(None))
        init = torch.tensor(init, requires_grad=True)
        if num_iter == 0:
            return init
    mu = init
    for t in range(num_iter):
        # get distances between all data points and cluster centers
        dist = data @ mu.t()
        # cluster responsibilities via softmax
        r = torch.softmax(cluster_temp * dist, 1)
        # total responsibility of each cluster
        cluster_r = r.sum(dim=0)
        # mean of points in each cluster weighted by responsibility
        cluster_mean = (r.t().unsqueeze(1) @ data.expand(k, *data.shape)).squeeze(1)
        # update cluster means
        new_mu = torch.diag(1 / cluster_r) @ cluster_mean
        mu = new_mu
    dist = data @ mu.t()
    r = torch.softmax(cluster_temp * dist, 1)
    return mu, r, dist


class GCNClusterNet(nn.Module):
    '''
    The ClusterNet architecture. The first step is a 2-layer GCN to generate embeddings.
    The output is the cluster means mu and soft assignments r, along with the
    embeddings and the the node similarities (just output for debugging purposes).

    The forward pass inputs are x, a feature matrix for the nodes, and adj, a sparse
    adjacency matrix. The optional parameter num_iter determines how many steps to
    run the k-means updates for.
    '''

    def __init__(self, nfeat, nhid, nout, dropout, K, cluster_temp):
        super(GCNClusterNet, self).__init__()
        self.GCN = GCN(nfeat, nhid, nout, dropout)
        self.distmult = nn.Parameter(torch.rand(nout))
        self.sigmoid = nn.Sigmoid()
        self.K = K
        self.cluster_temp = cluster_temp
        self.init = torch.rand(self.K, nout)

    def forward(self, x, adj, num_iter=1):
        embeds = self.GCN(x, adj)
        mu_init, _, _ = cluster(embeds, self.K, num_iter, init=self.init, cluster_temp=self.cluster_temp)
        mu, r, dist = cluster(embeds, self.K, num_iter, init=mu_init.detach().clone(), cluster_temp=self.cluster_temp)
        return mu, r, embeds, dist
# create a graph
# G = nx.random_partition_graph([10, 10, 10], 0.8, 0.1)



authorArr = ['Bilal Alsallakh', 'Liu Ren', 'Faisal Taher', 'Yvonne Jansen', 'Jonathan Woodruff', 'John Hardy', 'Kasper Hornbæk', 'Jason Alexander', 'Michail Schwab', 'Hendrik Strobelt', 'James Tompkin', 'Colin Fredericks', 'Connor Huff', 'Dana Higgins', 'Anton Strezhnev', 'Mayya Komisarchik', 'Gary King', 'Hanspeter Pfister', 'Yifan Zhang', 'Ross Maciejewski', 'Wouter Meulemans', 'Jason Dykes', 'Aidan Slingsby', 'Cagatay Turkay', 'Jo Wood', 'Mona Hosseinkhani Loorak', 'Charles Perin', 'Christopher Collins', 'Sheelagh Carpendale', 'Kasper Dinkla', 'Bryan Genest', 'Stephan Reiling', 'Mark Borowsky', 'Anzu Hakone', 'Lane Harrison', 'Alvitta Ottley', 'Nathan Winters', 'Caitlin Gutheil', 'Paul K. J. Han', 'Remco Chang', 'Stephan Pajer', 'Marc Streit', 'Thomas Torsney-Weir', 'Florian Spechtenhauser', 'Torsten Möller', 'Harald Piringer', 'Mengdie Hu', 'Krist Wongsuphasawat', 'John Stasko', 'Rafael Veras', 'Clemens Arbesser', 'Thomas Mühlbacher', 'Evanthia Dimara', 'Anastasia Bezerianos', 'Pierre Dragicevic', 'Wesley Willett', 'Alex Bigelow', 'Steven Drucker', 'Danyel Fisher', 'Miriah Meyer', 'Michael Correll', 'Jeffrey Heer', 'Goethem Arthur Van', 'Frank Staals', 'Maarten Löffler', 'Bettina Speckmann', 'Nam Wook Kim', 'Eston Schweickart', 'Zhicheng Liu', 'Mira Dontcheva', 'Wilmot Li', 'Jovan Popovic', 'Cícero A. L. Pahins', 'Sean A. Stephens', 'Carlos Scheidegger', 'João L. D. Comba', 'Fereshteh Amini', 'Nathalie Henry Riche', 'Bongshin Lee', 'Andres Monroy-Hernandez', 'Pourang Irani', 'Matthew Berger', 'Katherine McDonough', 'Lee M. Seversky', 'Zhe Wang', 'Nivan Ferreira', 'Youhao Wei', 'Aarthy Sankari Bhaskar', 'Bahador Saket', 'Hannah Kim', 'Eli T. Brown', 'Alex Endert', 'Roger Beecham', 'Yanhong Wu', 'Nan Cao', 'Daniel Archambault', 'Qiaomu Shen', 'Huamin Qu', 'Weiwei Cui', 'Chris Bryan', 'Kwan-Liu Ma', 'Jonathan Woodring', 'Yalong Yang', 'Tim Dwyer', 'Sarah Goodwin', 'Kim Marriott', 'Rudolf Netzel', 'Marcel Hlawatsch', 'Michael Burch', 'Sanjeev Balakrishnan', 'Hansjörg Schmauder', 'Daniel Weiskopf', 'Connor C. Gramazio', 'David H. Laidlaw', 'Karen B. Schloss', 'Christoph Schulz', 'Arlind Nocaj', 'Jochen Goertler', 'Oliver Deussen', 'Ulrik Brandes', 'Sukwon Lee', 'Sung-Hee Kim', 'Bum Chul Kwon', 'Benjamin Bach', 'Christophe Hurter', 'Arvind Satyanarayan', 'Dominik Moritz', 'Kanit Wongsuphasawat', 'Mi Feng', 'Cheng Deng', 'Evan M. Peck', 'Lace Padilla', 'P. Samuel Quinan', 'Sarah H. Creem-Regehr', 'Maxime Cordeil', 'Karsten Klein', 'Bireswar Laha', 'Bruce H. Thomas', 'Shiqing He', 'Eytan Adar', 'Daniel Jönsson', 'Anders Ynnerman', 'Andrew H. Stevens', 'Thomas Butkiewicz', 'Colin Ware', 'Fabio Miranda', 'Harish Doraiswamy', 'Marcos Lage', 'Kai Zhao', 'Bruno Gonçalves', 'Luc Wilson', 'Mondrian Hsieh', 'Cláudio T. Silva', 'Andreas J. Lind', 'Stefan Bruckner', 'Kai Lawonn', 'Erik Trostmann', 'Bernhard Preim', 'Klaus Hildebrandt', 'Soumya Dutta', 'Chun-Ming Chen', 'Gregory Heinlein', 'Han-Wei Shen', 'Jen-Ping Chen', 'Gregory Guterman', 'Harris Lewin', 'Denis Larkin', 'Jaebum Kim', 'Jian Ma', 'Marta Farré', 'Jiaxi Hu', 'Hajar Hamidian', 'Zichun Zhong', 'Jing Hua', 'Saad Nadeem', 'Joseph Marino', 'Xianfeng Gu', 'Arie Kaufman', 'Monique Meuschke', 'Samuel Voss', 'Oliver Beuing', 'Michael Krone', 'Florian Frieß', 'Katrin Scharnowski', 'Guido Reina', 'Silvia Fademrecht', 'Tobias Kulschewski', 'Jürgen Pleiss', 'Thomas Ertl', 'Pedro Hermosilla', 'Jorge Estrada', 'Victor Guallar', 'Timo Ropinski', 'Àlvar Vinacua', 'Pere-Pau Vázquez', 'Noeska Smit', 'Annelot Kraima', 'Marco DeRuiter', 'Hessam Sokooti', 'Elmar Eisemann', 'Anna Vilanova', 'Petra Isenberg', 'Tobias Isenberg', 'Michael Sedlmair', 'Jian Chen', 'Allan Rocha', 'Usman Alim', 'Julio Daniel Silva', 'Mario Costa Sousa', 'Florian Ferstl', 'Mathias Kanzler', 'Marc Rautenhaus', 'Rüdiger Westermann', 'Ayan Biswas', 'Guang Lin', 'Xiaotong Liu', 'Ivan Kolesár', 'Ivan Viola', 'Helwig Hauser', 'Tim Gerrits', 'Christian Rössl', 'Holger Theisel', 'Tobias Günther', 'Julien Tierny', 'Hamish Carr', 'Antoni Sagristà', 'Stefan Jordan', 'Andreas Just', 'Fabio Dias', 'Luis Gustavo Nonato', 'Filip Sadlo', 'Kui Wu', 'Aaron Knoll', 'Benjamin J Isaac', 'Valerio Pascucci', 'I Wald', 'GP Johnson', 'J Amstutz', 'C Brownlee', 'A Knoll', 'J Jeffers', 'J Günther', 'P Navratil', 'Steffen Frey', 'Jens Schneider', 'Peter Rautek', 'Xin Tong', 'Cheng Li', 'Sergej Stoppel', 'H. Fang', 'S. Walton', 'E. Delahaye', 'J. Harris', 'D. A. Storchak', 'M. Chen', 'Lonni Besançon', 'Paul Issartel', 'Mehdi Ammi', 'Quan Li', 'Peng Xu', 'Yeuk Yin Chan', 'Yun Wang', 'Zhipeng Wang', 'Xiaojuan Ma', 'Shamal Al-Dohuki', 'Yingyu Wu', 'Farah Kamw', 'Jing Yang', 'Xin Li', 'Ye Zhao', 'Xinyue Ye', 'Wei Chen', 'Chao Ma', 'Fei Wang', 'Dongyu Liu', 'Di Weng', 'Yuhong Li', 'Jie Bao', 'Yu Zheng', 'Yingcai Wu', 'Siwei Fu', 'Jian Zhao', 'Minjeong Kim', 'Kyeongpil Kang', 'Deokgun Park', 'Jaegul Choo', 'Niklas Elmqvist', 'Emily Wall', 'Haesun Park', 'Cristian Felix', 'Anshul Vikram Pandey', 'Enrico Bertini', 'R. Jordan Crouser', 'Lyndsey Franklin', 'Kris Cook', 'Ievgeniia Gutenko', 'Konstantin Dmitriev', 'Arie E. Kaufman', 'Matthew A. Barish', 'Tongshuang Wu', 'Haiyan Yang', 'Ali Sarvghad', 'Melanie Tory', 'Narges Mahyar', 'Michael Behrisch', 'Michael Hund', 'Michael Delz', 'Laura Von Rüden', 'Jean-Daniel Fekete', 'Tobias Schreck', 'Davide Ceneda', 'Theresia Gschwandtner', 'Thorsten May', 'Silvia Miksch', 'Hans-Jörg Schulz', 'Christian Tominski', 'Michael Glueck', 'Alina Gvozdik', 'Fanny Chevalier', 'Azam Khan', 'Michael Brudno', 'Daniel Wigdor', 'Erdem Kaya', 'Selim Balcisoy', 'Filip Dabek', 'Jesus J Caban', 'Xinsong Yang', 'Lei Shi', 'Madelaine Daianu', 'Hanghang Tong', 'Qingsong Liu', 'Paul Thompson', 'Cong Xie', 'Wen Zhong', 'Klaus Mueller', 'Dominik Sacha', 'Leishi Zhang', 'John A. Lee', 'Jaakko Peltonen', 'Stephen C. North', 'Daniel A. Keim', 'Bowen Yu', 'Simon Breslav', 'Aritra Dasgupta', 'Joon-Yong Lee', 'Ryan Wilson', 'Robert A. Lafrance', 'Nick Cramer', 'Kristin Cook', 'Samuel Payne', 'Christopher Mears', 'Maria Garcia de la Banda', 'Guido Tack', 'Mark Wallace', 'Panpan Xu', 'Honghui Mei', 'Kuno Kurzhals', 'Christof Seeger', 'Hyunjoo Song', 'Jeongjin Lee', 'Tae Jung Kim', 'Kyoung Ho Lee', 'Bohyoung Kim', 'Jinwook Seo', 'Yang Wang', 'Matthew Hoffman', 'Seth Walker', 'Alan Wilson', 'Donghao Ren', 'Saleema Amershi', 'Jina Suh', 'Jason D. Williams', 'Gary K. L. Tam', 'Vivek Kothari', 'Min Chen', 'Junpeng Wang', 'Mengchen Liu', 'Jiaxin Shi', 'Zhen Li', 'Chongxuan Li', 'Jun Zhu', 'Shixia Liu', 'Paulo E. Rauber', 'Samuel G. Fadel', 'Alexandre X. Falcão', 'Alexandru C. Telea', 'Po-Ming Law', 'Wenchao Wu', 'Yixian Zheng', 'Sriram Karthik Badam', 'Florian Heimerl', 'Markus John', 'Qi Han', 'Steffen Koch', 'Ji Hwan Park', 'Seyedkoosha Mirhosseini', 'David McColgin', 'Paul Hoover', 'Mark Igra', 'Siming Chen', 'Shuai Chen', 'Zhenhuang Wang', 'Jie Liang', 'Xiaoru Yuan', 'Yadong Wu', 'Xiting Wang', 'Yang Chen', 'Tai-Quan Peng', 'Jing Su', 'Baining Guo', 'Fan Du', 'Catherine Plaisant', 'Neil Spring', 'Ben Shneiderman', 'Anbang Xu', 'Liang Gou', 'Haibin Liu', 'Rama Akkiraju', 'Jing Xia', 'Yumeng Hou', 'Wanqi Hu', 'Xinxin Huang', 'David S. Ebertk', 'Phong H. Nguyen', 'Kai Xu', 'Andy Bardill', 'Betul Salman', 'Kate Herd', 'B.L. William Wong', 'Johannes Weissenböck', 'Artem Amirkhanov', 'Eduard Gröller', 'Johann Kastner', 'Christoph Heinzl', 'Yuanzhe Chen', 'Qing Chen', 'Mingqian Zhao', 'Sebastien Boyer', 'Kalyan Veeramachaneni', 'Prithiviraj K. Muthumanickam', 'Katerina Vrotsou', 'Matthew Cooper', 'Jimmy Johansson', 'Michael Gleicher', 'Tanja Blascheck', 'Fabian Beck', 'Sebastian Baltes']
author_link_arr = [[{'source': 'Bilal Alsallakh', 'target': 'Liu Ren'}], [{'source': 'Faisal Taher', 'target': 'Yvonne Jansen'}, {'source': 'Faisal Taher', 'target': 'Jonathan Woodruff'}, {'source': 'Faisal Taher', 'target': 'John Hardy'}, {'source': 'Faisal Taher', 'target': 'Kasper Hornbæk'}, {'source': 'Faisal Taher', 'target': 'Jason Alexander'}, {'source': 'Yvonne Jansen', 'target': 'Jonathan Woodruff'}, {'source': 'Yvonne Jansen', 'target': 'John Hardy'}, {'source': 'Yvonne Jansen', 'target': 'Kasper Hornbæk'}, {'source': 'Yvonne Jansen', 'target': 'Jason Alexander'}, {'source': 'Jonathan Woodruff', 'target': 'John Hardy'}, {'source': 'Jonathan Woodruff', 'target': 'Kasper Hornbæk'}, {'source': 'Jonathan Woodruff', 'target': 'Jason Alexander'}, {'source': 'John Hardy', 'target': 'Kasper Hornbæk'}, {'source': 'John Hardy', 'target': 'Jason Alexander'}, {'source': 'Kasper Hornbæk', 'target': 'Jason Alexander'}], [{'source': 'Michail Schwab', 'target': 'Hendrik Strobelt'}, {'source': 'Michail Schwab', 'target': 'James Tompkin'}, {'source': 'Michail Schwab', 'target': 'Colin Fredericks'}, {'source': 'Michail Schwab', 'target': 'Connor Huff'}, {'source': 'Michail Schwab', 'target': 'Dana Higgins'}, {'source': 'Michail Schwab', 'target': 'Anton Strezhnev'}, {'source': 'Michail Schwab', 'target': 'Mayya Komisarchik'}, {'source': 'Michail Schwab', 'target': 'Gary King'}, {'source': 'Michail Schwab', 'target': 'Hanspeter Pfister'}, {'source': 'Hendrik Strobelt', 'target': 'James Tompkin'}, {'source': 'Hendrik Strobelt', 'target': 'Colin Fredericks'}, {'source': 'Hendrik Strobelt', 'target': 'Connor Huff'}, {'source': 'Hendrik Strobelt', 'target': 'Dana Higgins'}, {'source': 'Hendrik Strobelt', 'target': 'Anton Strezhnev'}, {'source': 'Hendrik Strobelt', 'target': 'Mayya Komisarchik'}, {'source': 'Hendrik Strobelt', 'target': 'Gary King'}, {'source': 'Hendrik Strobelt', 'target': 'Hanspeter Pfister'}, {'source': 'James Tompkin', 'target': 'Colin Fredericks'}, {'source': 'James Tompkin', 'target': 'Connor Huff'}, {'source': 'James Tompkin', 'target': 'Dana Higgins'}, {'source': 'James Tompkin', 'target': 'Anton Strezhnev'}, {'source': 'James Tompkin', 'target': 'Mayya Komisarchik'}, {'source': 'James Tompkin', 'target': 'Gary King'}, {'source': 'James Tompkin', 'target': 'Hanspeter Pfister'}, {'source': 'Colin Fredericks', 'target': 'Connor Huff'}, {'source': 'Colin Fredericks', 'target': 'Dana Higgins'}, {'source': 'Colin Fredericks', 'target': 'Anton Strezhnev'}, {'source': 'Colin Fredericks', 'target': 'Mayya Komisarchik'}, {'source': 'Colin Fredericks', 'target': 'Gary King'}, {'source': 'Colin Fredericks', 'target': 'Hanspeter Pfister'}, {'source': 'Connor Huff', 'target': 'Dana Higgins'}, {'source': 'Connor Huff', 'target': 'Anton Strezhnev'}, {'source': 'Connor Huff', 'target': 'Mayya Komisarchik'}, {'source': 'Connor Huff', 'target': 'Gary King'}, {'source': 'Connor Huff', 'target': 'Hanspeter Pfister'}, {'source': 'Dana Higgins', 'target': 'Anton Strezhnev'}, {'source': 'Dana Higgins', 'target': 'Mayya Komisarchik'}, {'source': 'Dana Higgins', 'target': 'Gary King'}, {'source': 'Dana Higgins', 'target': 'Hanspeter Pfister'}, {'source': 'Anton Strezhnev', 'target': 'Mayya Komisarchik'}, {'source': 'Anton Strezhnev', 'target': 'Gary King'}, {'source': 'Anton Strezhnev', 'target': 'Hanspeter Pfister'}, {'source': 'Mayya Komisarchik', 'target': 'Gary King'}, {'source': 'Mayya Komisarchik', 'target': 'Hanspeter Pfister'}, {'source': 'Gary King', 'target': 'Hanspeter Pfister'}], [{'source': 'Yifan Zhang', 'target': 'Ross Maciejewski'}], [{'source': 'Wouter Meulemans', 'target': 'Jason Dykes'}, {'source': 'Wouter Meulemans', 'target': 'Aidan Slingsby'}, {'source': 'Wouter Meulemans', 'target': 'Cagatay Turkay'}, {'source': 'Wouter Meulemans', 'target': 'Jo Wood'}, {'source': 'Jason Dykes', 'target': 'Aidan Slingsby'}, {'source': 'Jason Dykes', 'target': 'Cagatay Turkay'}, {'source': 'Jason Dykes', 'target': 'Jo Wood'}, {'source': 'Aidan Slingsby', 'target': 'Cagatay Turkay'}, {'source': 'Aidan Slingsby', 'target': 'Jo Wood'}, {'source': 'Cagatay Turkay', 'target': 'Jo Wood'}], [{'source': 'Mona Hosseinkhani Loorak', 'target': 'Charles Perin'}, {'source': 'Mona Hosseinkhani Loorak', 'target': 'Christopher Collins'}, {'source': 'Mona Hosseinkhani Loorak', 'target': 'Sheelagh Carpendale'}, {'source': 'Charles Perin', 'target': 'Christopher Collins'}, {'source': 'Charles Perin', 'target': 'Sheelagh Carpendale'}, {'source': 'Christopher Collins', 'target': 'Sheelagh Carpendale'}], [{'source': 'Kasper Dinkla', 'target': 'Hendrik Strobelt'}, {'source': 'Kasper Dinkla', 'target': 'Bryan Genest'}, {'source': 'Kasper Dinkla', 'target': 'Stephan Reiling'}, {'source': 'Kasper Dinkla', 'target': 'Mark Borowsky'}, {'source': 'Kasper Dinkla', 'target': 'Hanspeter Pfister'}, {'source': 'Hendrik Strobelt', 'target': 'Bryan Genest'}, {'source': 'Hendrik Strobelt', 'target': 'Stephan Reiling'}, {'source': 'Hendrik Strobelt', 'target': 'Mark Borowsky'}, {'source': 'Hendrik Strobelt', 'target': 'Hanspeter Pfister'}, {'source': 'Bryan Genest', 'target': 'Stephan Reiling'}, {'source': 'Bryan Genest', 'target': 'Mark Borowsky'}, {'source': 'Bryan Genest', 'target': 'Hanspeter Pfister'}, {'source': 'Stephan Reiling', 'target': 'Mark Borowsky'}, {'source': 'Stephan Reiling', 'target': 'Hanspeter Pfister'}, {'source': 'Mark Borowsky', 'target': 'Hanspeter Pfister'}], [{'source': 'Anzu Hakone', 'target': 'Lane Harrison'}, {'source': 'Anzu Hakone', 'target': 'Alvitta Ottley'}, {'source': 'Anzu Hakone', 'target': 'Nathan Winters'}, {'source': 'Anzu Hakone', 'target': 'Caitlin Gutheil'}, {'source': 'Anzu Hakone', 'target': 'Paul K. J. Han'}, {'source': 'Anzu Hakone', 'target': 'Remco Chang'}, {'source': 'Lane Harrison', 'target': 'Alvitta Ottley'}, {'source': 'Lane Harrison', 'target': 'Nathan Winters'}, {'source': 'Lane Harrison', 'target': 'Caitlin Gutheil'}, {'source': 'Lane Harrison', 'target': 'Paul K. J. Han'}, {'source': 'Lane Harrison', 'target': 'Remco Chang'}, {'source': 'Alvitta Ottley', 'target': 'Nathan Winters'}, {'source': 'Alvitta Ottley', 'target': 'Caitlin Gutheil'}, {'source': 'Alvitta Ottley', 'target': 'Paul K. J. Han'}, {'source': 'Alvitta Ottley', 'target': 'Remco Chang'}, {'source': 'Nathan Winters', 'target': 'Caitlin Gutheil'}, {'source': 'Nathan Winters', 'target': 'Paul K. J. Han'}, {'source': 'Nathan Winters', 'target': 'Remco Chang'}, {'source': 'Caitlin Gutheil', 'target': 'Paul K. J. Han'}, {'source': 'Caitlin Gutheil', 'target': 'Remco Chang'}, {'source': 'Paul K. J. Han', 'target': 'Remco Chang'}], [{'source': 'Stephan Pajer', 'target': 'Marc Streit'}, {'source': 'Stephan Pajer', 'target': 'Thomas Torsney-Weir'}, {'source': 'Stephan Pajer', 'target': 'Florian Spechtenhauser'}, {'source': 'Stephan Pajer', 'target': 'Torsten Möller'}, {'source': 'Stephan Pajer', 'target': 'Harald Piringer'}, {'source': 'Marc Streit', 'target': 'Thomas Torsney-Weir'}, {'source': 'Marc Streit', 'target': 'Florian Spechtenhauser'}, {'source': 'Marc Streit', 'target': 'Torsten Möller'}, {'source': 'Marc Streit', 'target': 'Harald Piringer'}, {'source': 'Thomas Torsney-Weir', 'target': 'Florian Spechtenhauser'}, {'source': 'Thomas Torsney-Weir', 'target': 'Torsten Möller'}, {'source': 'Thomas Torsney-Weir', 'target': 'Harald Piringer'}, {'source': 'Florian Spechtenhauser', 'target': 'Torsten Möller'}, {'source': 'Florian Spechtenhauser', 'target': 'Harald Piringer'}, {'source': 'Torsten Möller', 'target': 'Harald Piringer'}], [{'source': 'Mengdie Hu', 'target': 'Krist Wongsuphasawat'}, {'source': 'Mengdie Hu', 'target': 'John Stasko'}, {'source': 'Krist Wongsuphasawat', 'target': 'John Stasko'}], [{'source': 'Rafael Veras', 'target': 'Christopher Collins'}], [{'source': 'Clemens Arbesser', 'target': 'Florian Spechtenhauser'}, {'source': 'Clemens Arbesser', 'target': 'Thomas Mühlbacher'}, {'source': 'Clemens Arbesser', 'target': 'Harald Piringer'}, {'source': 'Florian Spechtenhauser', 'target': 'Thomas Mühlbacher'}, {'source': 'Florian Spechtenhauser', 'target': 'Harald Piringer'}, {'source': 'Thomas Mühlbacher', 'target': 'Harald Piringer'}], [{'source': 'Evanthia Dimara', 'target': 'Anastasia Bezerianos'}, {'source': 'Evanthia Dimara', 'target': 'Pierre Dragicevic'}, {'source': 'Anastasia Bezerianos', 'target': 'Pierre Dragicevic'}], [{'source': 'Wesley Willett', 'target': 'Yvonne Jansen'}, {'source': 'Wesley Willett', 'target': 'Pierre Dragicevic'}, {'source': 'Yvonne Jansen', 'target': 'Pierre Dragicevic'}], [{'source': 'Alex Bigelow', 'target': 'Steven Drucker'}, {'source': 'Alex Bigelow', 'target': 'Danyel Fisher'}, {'source': 'Alex Bigelow', 'target': 'Miriah Meyer'}, {'source': 'Steven Drucker', 'target': 'Danyel Fisher'}, {'source': 'Steven Drucker', 'target': 'Miriah Meyer'}, {'source': 'Danyel Fisher', 'target': 'Miriah Meyer'}], [{'source': 'Michael Correll', 'target': 'Jeffrey Heer'}], [{'source': 'Goethem Arthur Van', 'target': 'Frank Staals'}, {'source': 'Goethem Arthur Van', 'target': 'Maarten Löffler'}, {'source': 'Goethem Arthur Van', 'target': 'Jason Dykes'}, {'source': 'Goethem Arthur Van', 'target': 'Bettina Speckmann'}, {'source': 'Frank Staals', 'target': 'Maarten Löffler'}, {'source': 'Frank Staals', 'target': 'Jason Dykes'}, {'source': 'Frank Staals', 'target': 'Bettina Speckmann'}, {'source': 'Maarten Löffler', 'target': 'Jason Dykes'}, {'source': 'Maarten Löffler', 'target': 'Bettina Speckmann'}, {'source': 'Jason Dykes', 'target': 'Bettina Speckmann'}], [{'source': 'Nam Wook Kim', 'target': 'Eston Schweickart'}, {'source': 'Nam Wook Kim', 'target': 'Zhicheng Liu'}, {'source': 'Nam Wook Kim', 'target': 'Mira Dontcheva'}, {'source': 'Nam Wook Kim', 'target': 'Wilmot Li'}, {'source': 'Nam Wook Kim', 'target': 'Jovan Popovic'}, {'source': 'Nam Wook Kim', 'target': 'Hanspeter Pfister'}, {'source': 'Eston Schweickart', 'target': 'Zhicheng Liu'}, {'source': 'Eston Schweickart', 'target': 'Mira Dontcheva'}, {'source': 'Eston Schweickart', 'target': 'Wilmot Li'}, {'source': 'Eston Schweickart', 'target': 'Jovan Popovic'}, {'source': 'Eston Schweickart', 'target': 'Hanspeter Pfister'}, {'source': 'Zhicheng Liu', 'target': 'Mira Dontcheva'}, {'source': 'Zhicheng Liu', 'target': 'Wilmot Li'}, {'source': 'Zhicheng Liu', 'target': 'Jovan Popovic'}, {'source': 'Zhicheng Liu', 'target': 'Hanspeter Pfister'}, {'source': 'Mira Dontcheva', 'target': 'Wilmot Li'}, {'source': 'Mira Dontcheva', 'target': 'Jovan Popovic'}, {'source': 'Mira Dontcheva', 'target': 'Hanspeter Pfister'}, {'source': 'Wilmot Li', 'target': 'Jovan Popovic'}, {'source': 'Wilmot Li', 'target': 'Hanspeter Pfister'}, {'source': 'Jovan Popovic', 'target': 'Hanspeter Pfister'}], [{'source': 'Cícero A. L. Pahins', 'target': 'Sean A. Stephens'}, {'source': 'Cícero A. L. Pahins', 'target': 'Carlos Scheidegger'}, {'source': 'Cícero A. L. Pahins', 'target': 'João L. D. Comba'}, {'source': 'Sean A. Stephens', 'target': 'Carlos Scheidegger'}, {'source': 'Sean A. Stephens', 'target': 'João L. D. Comba'}, {'source': 'Carlos Scheidegger', 'target': 'João L. D. Comba'}], [{'source': 'Fereshteh Amini', 'target': 'Nathalie Henry Riche'}, {'source': 'Fereshteh Amini', 'target': 'Bongshin Lee'}, {'source': 'Fereshteh Amini', 'target': 'Andres Monroy-Hernandez'}, {'source': 'Fereshteh Amini', 'target': 'Pourang Irani'}, {'source': 'Nathalie Henry Riche', 'target': 'Bongshin Lee'}, {'source': 'Nathalie Henry Riche', 'target': 'Andres Monroy-Hernandez'}, {'source': 'Nathalie Henry Riche', 'target': 'Pourang Irani'}, {'source': 'Bongshin Lee', 'target': 'Andres Monroy-Hernandez'}, {'source': 'Bongshin Lee', 'target': 'Pourang Irani'}, {'source': 'Andres Monroy-Hernandez', 'target': 'Pourang Irani'}], [{'source': 'Matthew Berger', 'target': 'Katherine McDonough'}, {'source': 'Matthew Berger', 'target': 'Lee M. Seversky'}, {'source': 'Katherine McDonough', 'target': 'Lee M. Seversky'}], [{'source': 'Zhe Wang', 'target': 'Nivan Ferreira'}, {'source': 'Zhe Wang', 'target': 'Youhao Wei'}, {'source': 'Zhe Wang', 'target': 'Aarthy Sankari Bhaskar'}, {'source': 'Zhe Wang', 'target': 'Carlos Scheidegger'}, {'source': 'Nivan Ferreira', 'target': 'Youhao Wei'}, {'source': 'Nivan Ferreira', 'target': 'Aarthy Sankari Bhaskar'}, {'source': 'Nivan Ferreira', 'target': 'Carlos Scheidegger'}, {'source': 'Youhao Wei', 'target': 'Aarthy Sankari Bhaskar'}, {'source': 'Youhao Wei', 'target': 'Carlos Scheidegger'}, {'source': 'Aarthy Sankari Bhaskar', 'target': 'Carlos Scheidegger'}], [{'source': 'Bahador Saket', 'target': 'Hannah Kim'}, {'source': 'Bahador Saket', 'target': 'Eli T. Brown'}, {'source': 'Bahador Saket', 'target': 'Alex Endert'}, {'source': 'Hannah Kim', 'target': 'Eli T. Brown'}, {'source': 'Hannah Kim', 'target': 'Alex Endert'}, {'source': 'Eli T. Brown', 'target': 'Alex Endert'}], [{'source': 'Roger Beecham', 'target': 'Jason Dykes'}, {'source': 'Roger Beecham', 'target': 'Wouter Meulemans'}, {'source': 'Roger Beecham', 'target': 'Aidan Slingsby'}, {'source': 'Roger Beecham', 'target': 'Cagatay Turkay'}, {'source': 'Roger Beecham', 'target': 'Jo Wood'}, {'source': 'Jason Dykes', 'target': 'Wouter Meulemans'}, {'source': 'Jason Dykes', 'target': 'Aidan Slingsby'}, {'source': 'Jason Dykes', 'target': 'Cagatay Turkay'}, {'source': 'Jason Dykes', 'target': 'Jo Wood'}, {'source': 'Wouter Meulemans', 'target': 'Aidan Slingsby'}, {'source': 'Wouter Meulemans', 'target': 'Cagatay Turkay'}, {'source': 'Wouter Meulemans', 'target': 'Jo Wood'}, {'source': 'Aidan Slingsby', 'target': 'Cagatay Turkay'}, {'source': 'Aidan Slingsby', 'target': 'Jo Wood'}, {'source': 'Cagatay Turkay', 'target': 'Jo Wood'}], [{'source': 'Yanhong Wu', 'target': 'Nan Cao'}, {'source': 'Yanhong Wu', 'target': 'Daniel Archambault'}, {'source': 'Yanhong Wu', 'target': 'Qiaomu Shen'}, {'source': 'Yanhong Wu', 'target': 'Huamin Qu'}, {'source': 'Yanhong Wu', 'target': 'Weiwei Cui'}, {'source': 'Nan Cao', 'target': 'Daniel Archambault'}, {'source': 'Nan Cao', 'target': 'Qiaomu Shen'}, {'source': 'Nan Cao', 'target': 'Huamin Qu'}, {'source': 'Nan Cao', 'target': 'Weiwei Cui'}, {'source': 'Daniel Archambault', 'target': 'Qiaomu Shen'}, {'source': 'Daniel Archambault', 'target': 'Huamin Qu'}, {'source': 'Daniel Archambault', 'target': 'Weiwei Cui'}, {'source': 'Qiaomu Shen', 'target': 'Huamin Qu'}, {'source': 'Qiaomu Shen', 'target': 'Weiwei Cui'}, {'source': 'Huamin Qu', 'target': 'Weiwei Cui'}], [{'source': 'Chris Bryan', 'target': 'Kwan-Liu Ma'}, {'source': 'Chris Bryan', 'target': 'Jonathan Woodring'}, {'source': 'Kwan-Liu Ma', 'target': 'Jonathan Woodring'}], [{'source': 'Yalong Yang', 'target': 'Tim Dwyer'}, {'source': 'Yalong Yang', 'target': 'Sarah Goodwin'}, {'source': 'Yalong Yang', 'target': 'Kim Marriott'}, {'source': 'Tim Dwyer', 'target': 'Sarah Goodwin'}, {'source': 'Tim Dwyer', 'target': 'Kim Marriott'}, {'source': 'Sarah Goodwin', 'target': 'Kim Marriott'}], [{'source': 'Rudolf Netzel', 'target': 'Marcel Hlawatsch'}, {'source': 'Rudolf Netzel', 'target': 'Michael Burch'}, {'source': 'Rudolf Netzel', 'target': 'Sanjeev Balakrishnan'}, {'source': 'Rudolf Netzel', 'target': 'Hansjörg Schmauder'}, {'source': 'Rudolf Netzel', 'target': 'Daniel Weiskopf'}, {'source': 'Marcel Hlawatsch', 'target': 'Michael Burch'}, {'source': 'Marcel Hlawatsch', 'target': 'Sanjeev Balakrishnan'}, {'source': 'Marcel Hlawatsch', 'target': 'Hansjörg Schmauder'}, {'source': 'Marcel Hlawatsch', 'target': 'Daniel Weiskopf'}, {'source': 'Michael Burch', 'target': 'Sanjeev Balakrishnan'}, {'source': 'Michael Burch', 'target': 'Hansjörg Schmauder'}, {'source': 'Michael Burch', 'target': 'Daniel Weiskopf'}, {'source': 'Sanjeev Balakrishnan', 'target': 'Hansjörg Schmauder'}, {'source': 'Sanjeev Balakrishnan', 'target': 'Daniel Weiskopf'}, {'source': 'Hansjörg Schmauder', 'target': 'Daniel Weiskopf'}], [{'source': 'Connor C. Gramazio', 'target': 'David H. Laidlaw'}, {'source': 'Connor C. Gramazio', 'target': 'Karen B. Schloss'}, {'source': 'David H. Laidlaw', 'target': 'Karen B. Schloss'}], [{'source': 'Christoph Schulz', 'target': 'Arlind Nocaj'}, {'source': 'Christoph Schulz', 'target': 'Jochen Goertler'}, {'source': 'Christoph Schulz', 'target': 'Oliver Deussen'}, {'source': 'Christoph Schulz', 'target': 'Ulrik Brandes'}, {'source': 'Christoph Schulz', 'target': 'Daniel Weiskopf'}, {'source': 'Arlind Nocaj', 'target': 'Jochen Goertler'}, {'source': 'Arlind Nocaj', 'target': 'Oliver Deussen'}, {'source': 'Arlind Nocaj', 'target': 'Ulrik Brandes'}, {'source': 'Arlind Nocaj', 'target': 'Daniel Weiskopf'}, {'source': 'Jochen Goertler', 'target': 'Oliver Deussen'}, {'source': 'Jochen Goertler', 'target': 'Ulrik Brandes'}, {'source': 'Jochen Goertler', 'target': 'Daniel Weiskopf'}, {'source': 'Oliver Deussen', 'target': 'Ulrik Brandes'}, {'source': 'Oliver Deussen', 'target': 'Daniel Weiskopf'}, {'source': 'Ulrik Brandes', 'target': 'Daniel Weiskopf'}], [{'source': 'Sukwon Lee', 'target': 'Sung-Hee Kim'}, {'source': 'Sukwon Lee', 'target': 'Bum Chul Kwon'}, {'source': 'Sung-Hee Kim', 'target': 'Bum Chul Kwon'}], [{'source': 'Benjamin Bach', 'target': 'Nathalie Henry Riche'}, {'source': 'Benjamin Bach', 'target': 'Christophe Hurter'}, {'source': 'Benjamin Bach', 'target': 'Kim Marriott'}, {'source': 'Benjamin Bach', 'target': 'Tim Dwyer'}, {'source': 'Nathalie Henry Riche', 'target': 'Christophe Hurter'}, {'source': 'Nathalie Henry Riche', 'target': 'Kim Marriott'}, {'source': 'Nathalie Henry Riche', 'target': 'Tim Dwyer'}, {'source': 'Christophe Hurter', 'target': 'Kim Marriott'}, {'source': 'Christophe Hurter', 'target': 'Tim Dwyer'}, {'source': 'Kim Marriott', 'target': 'Tim Dwyer'}], [{'source': 'Arvind Satyanarayan', 'target': 'Dominik Moritz'}, {'source': 'Arvind Satyanarayan', 'target': 'Kanit Wongsuphasawat'}, {'source': 'Arvind Satyanarayan', 'target': 'Jeffrey Heer'}, {'source': 'Dominik Moritz', 'target': 'Kanit Wongsuphasawat'}, {'source': 'Dominik Moritz', 'target': 'Jeffrey Heer'}, {'source': 'Kanit Wongsuphasawat', 'target': 'Jeffrey Heer'}], [{'source': 'Mi Feng', 'target': 'Cheng Deng'}, {'source': 'Mi Feng', 'target': 'Evan M. Peck'}, {'source': 'Mi Feng', 'target': 'Lane Harrison'}, {'source': 'Cheng Deng', 'target': 'Evan M. Peck'}, {'source': 'Cheng Deng', 'target': 'Lane Harrison'}, {'source': 'Evan M. Peck', 'target': 'Lane Harrison'}], [{'source': 'Lace Padilla', 'target': 'P. Samuel Quinan'}, {'source': 'Lace Padilla', 'target': 'Miriah Meyer'}, {'source': 'Lace Padilla', 'target': 'Sarah H. Creem-Regehr'}, {'source': 'P. Samuel Quinan', 'target': 'Miriah Meyer'}, {'source': 'P. Samuel Quinan', 'target': 'Sarah H. Creem-Regehr'}, {'source': 'Miriah Meyer', 'target': 'Sarah H. Creem-Regehr'}], [{'source': 'Maxime Cordeil', 'target': 'Tim Dwyer'}, {'source': 'Maxime Cordeil', 'target': 'Karsten Klein'}, {'source': 'Maxime Cordeil', 'target': 'Bireswar Laha'}, {'source': 'Maxime Cordeil', 'target': 'Kim Marriott'}, {'source': 'Maxime Cordeil', 'target': 'Bruce H. Thomas'}, {'source': 'Tim Dwyer', 'target': 'Karsten Klein'}, {'source': 'Tim Dwyer', 'target': 'Bireswar Laha'}, {'source': 'Tim Dwyer', 'target': 'Kim Marriott'}, {'source': 'Tim Dwyer', 'target': 'Bruce H. Thomas'}, {'source': 'Karsten Klein', 'target': 'Bireswar Laha'}, {'source': 'Karsten Klein', 'target': 'Kim Marriott'}, {'source': 'Karsten Klein', 'target': 'Bruce H. Thomas'}, {'source': 'Bireswar Laha', 'target': 'Kim Marriott'}, {'source': 'Bireswar Laha', 'target': 'Bruce H. Thomas'}, {'source': 'Kim Marriott', 'target': 'Bruce H. Thomas'}], [{'source': 'Shiqing He', 'target': 'Eytan Adar'}], [{'source': 'Daniel Jönsson', 'target': 'Anders Ynnerman'}], [{'source': 'Andrew H. Stevens', 'target': 'Thomas Butkiewicz'}, {'source': 'Andrew H. Stevens', 'target': 'Colin Ware'}, {'source': 'Thomas Butkiewicz', 'target': 'Colin Ware'}], [{'source': 'Fabio Miranda', 'target': 'Harish Doraiswamy'}, {'source': 'Fabio Miranda', 'target': 'Marcos Lage'}, {'source': 'Fabio Miranda', 'target': 'Kai Zhao'}, {'source': 'Fabio Miranda', 'target': 'Bruno Gonçalves'}, {'source': 'Fabio Miranda', 'target': 'Luc Wilson'}, {'source': 'Fabio Miranda', 'target': 'Mondrian Hsieh'}, {'source': 'Fabio Miranda', 'target': 'Cláudio T. Silva'}, {'source': 'Harish Doraiswamy', 'target': 'Marcos Lage'}, {'source': 'Harish Doraiswamy', 'target': 'Kai Zhao'}, {'source': 'Harish Doraiswamy', 'target': 'Bruno Gonçalves'}, {'source': 'Harish Doraiswamy', 'target': 'Luc Wilson'}, {'source': 'Harish Doraiswamy', 'target': 'Mondrian Hsieh'}, {'source': 'Harish Doraiswamy', 'target': 'Cláudio T. Silva'}, {'source': 'Marcos Lage', 'target': 'Kai Zhao'}, {'source': 'Marcos Lage', 'target': 'Bruno Gonçalves'}, {'source': 'Marcos Lage', 'target': 'Luc Wilson'}, {'source': 'Marcos Lage', 'target': 'Mondrian Hsieh'}, {'source': 'Marcos Lage', 'target': 'Cláudio T. Silva'}, {'source': 'Kai Zhao', 'target': 'Bruno Gonçalves'}, {'source': 'Kai Zhao', 'target': 'Luc Wilson'}, {'source': 'Kai Zhao', 'target': 'Mondrian Hsieh'}, {'source': 'Kai Zhao', 'target': 'Cláudio T. Silva'}, {'source': 'Bruno Gonçalves', 'target': 'Luc Wilson'}, {'source': 'Bruno Gonçalves', 'target': 'Mondrian Hsieh'}, {'source': 'Bruno Gonçalves', 'target': 'Cláudio T. Silva'}, {'source': 'Luc Wilson', 'target': 'Mondrian Hsieh'}, {'source': 'Luc Wilson', 'target': 'Cláudio T. Silva'}, {'source': 'Mondrian Hsieh', 'target': 'Cláudio T. Silva'}], [{'source': 'Andreas J. Lind', 'target': 'Stefan Bruckner'}], [{'source': 'Kai Lawonn', 'target': 'Erik Trostmann'}, {'source': 'Kai Lawonn', 'target': 'Bernhard Preim'}, {'source': 'Kai Lawonn', 'target': 'Klaus Hildebrandt'}, {'source': 'Erik Trostmann', 'target': 'Bernhard Preim'}, {'source': 'Erik Trostmann', 'target': 'Klaus Hildebrandt'}, {'source': 'Bernhard Preim', 'target': 'Klaus Hildebrandt'}], [{'source': 'Soumya Dutta', 'target': 'Chun-Ming Chen'}, {'source': 'Soumya Dutta', 'target': 'Gregory Heinlein'}, {'source': 'Soumya Dutta', 'target': 'Han-Wei Shen'}, {'source': 'Soumya Dutta', 'target': 'Jen-Ping Chen'}, {'source': 'Chun-Ming Chen', 'target': 'Gregory Heinlein'}, {'source': 'Chun-Ming Chen', 'target': 'Han-Wei Shen'}, {'source': 'Chun-Ming Chen', 'target': 'Jen-Ping Chen'}, {'source': 'Gregory Heinlein', 'target': 'Han-Wei Shen'}, {'source': 'Gregory Heinlein', 'target': 'Jen-Ping Chen'}, {'source': 'Han-Wei Shen', 'target': 'Jen-Ping Chen'}], [{'source': 'Chris Bryan', 'target': 'Gregory Guterman'}, {'source': 'Chris Bryan', 'target': 'Kwan-Liu Ma'}, {'source': 'Chris Bryan', 'target': 'Harris Lewin'}, {'source': 'Chris Bryan', 'target': 'Denis Larkin'}, {'source': 'Chris Bryan', 'target': 'Jaebum Kim'}, {'source': 'Chris Bryan', 'target': 'Jian Ma'}, {'source': 'Chris Bryan', 'target': 'Marta Farré'}, {'source': 'Gregory Guterman', 'target': 'Kwan-Liu Ma'}, {'source': 'Gregory Guterman', 'target': 'Harris Lewin'}, {'source': 'Gregory Guterman', 'target': 'Denis Larkin'}, {'source': 'Gregory Guterman', 'target': 'Jaebum Kim'}, {'source': 'Gregory Guterman', 'target': 'Jian Ma'}, {'source': 'Gregory Guterman', 'target': 'Marta Farré'}, {'source': 'Kwan-Liu Ma', 'target': 'Harris Lewin'}, {'source': 'Kwan-Liu Ma', 'target': 'Denis Larkin'}, {'source': 'Kwan-Liu Ma', 'target': 'Jaebum Kim'}, {'source': 'Kwan-Liu Ma', 'target': 'Jian Ma'}, {'source': 'Kwan-Liu Ma', 'target': 'Marta Farré'}, {'source': 'Harris Lewin', 'target': 'Denis Larkin'}, {'source': 'Harris Lewin', 'target': 'Jaebum Kim'}, {'source': 'Harris Lewin', 'target': 'Jian Ma'}, {'source': 'Harris Lewin', 'target': 'Marta Farré'}, {'source': 'Denis Larkin', 'target': 'Jaebum Kim'}, {'source': 'Denis Larkin', 'target': 'Jian Ma'}, {'source': 'Denis Larkin', 'target': 'Marta Farré'}, {'source': 'Jaebum Kim', 'target': 'Jian Ma'}, {'source': 'Jaebum Kim', 'target': 'Marta Farré'}, {'source': 'Jian Ma', 'target': 'Marta Farré'}], [{'source': 'Jiaxi Hu', 'target': 'Hajar Hamidian'}, {'source': 'Jiaxi Hu', 'target': 'Zichun Zhong'}, {'source': 'Jiaxi Hu', 'target': 'Jing Hua'}, {'source': 'Hajar Hamidian', 'target': 'Zichun Zhong'}, {'source': 'Hajar Hamidian', 'target': 'Jing Hua'}, {'source': 'Zichun Zhong', 'target': 'Jing Hua'}], [{'source': 'Saad Nadeem', 'target': 'Joseph Marino'}, {'source': 'Saad Nadeem', 'target': 'Xianfeng Gu'}, {'source': 'Saad Nadeem', 'target': 'Arie Kaufman'}, {'source': 'Joseph Marino', 'target': 'Xianfeng Gu'}, {'source': 'Joseph Marino', 'target': 'Arie Kaufman'}, {'source': 'Xianfeng Gu', 'target': 'Arie Kaufman'}], [{'source': 'Monique Meuschke', 'target': 'Samuel Voss'}, {'source': 'Monique Meuschke', 'target': 'Oliver Beuing'}, {'source': 'Monique Meuschke', 'target': 'Bernhard Preim'}, {'source': 'Monique Meuschke', 'target': 'Kai Lawonn'}, {'source': 'Samuel Voss', 'target': 'Oliver Beuing'}, {'source': 'Samuel Voss', 'target': 'Bernhard Preim'}, {'source': 'Samuel Voss', 'target': 'Kai Lawonn'}, {'source': 'Oliver Beuing', 'target': 'Bernhard Preim'}, {'source': 'Oliver Beuing', 'target': 'Kai Lawonn'}, {'source': 'Bernhard Preim', 'target': 'Kai Lawonn'}], [{'source': 'Michael Krone', 'target': 'Florian Frieß'}, {'source': 'Michael Krone', 'target': 'Katrin Scharnowski'}, {'source': 'Michael Krone', 'target': 'Guido Reina'}, {'source': 'Michael Krone', 'target': 'Silvia Fademrecht'}, {'source': 'Michael Krone', 'target': 'Tobias Kulschewski'}, {'source': 'Michael Krone', 'target': 'Jürgen Pleiss'}, {'source': 'Michael Krone', 'target': 'Thomas Ertl'}, {'source': 'Florian Frieß', 'target': 'Katrin Scharnowski'}, {'source': 'Florian Frieß', 'target': 'Guido Reina'}, {'source': 'Florian Frieß', 'target': 'Silvia Fademrecht'}, {'source': 'Florian Frieß', 'target': 'Tobias Kulschewski'}, {'source': 'Florian Frieß', 'target': 'Jürgen Pleiss'}, {'source': 'Florian Frieß', 'target': 'Thomas Ertl'}, {'source': 'Katrin Scharnowski', 'target': 'Guido Reina'}, {'source': 'Katrin Scharnowski', 'target': 'Silvia Fademrecht'}, {'source': 'Katrin Scharnowski', 'target': 'Tobias Kulschewski'}, {'source': 'Katrin Scharnowski', 'target': 'Jürgen Pleiss'}, {'source': 'Katrin Scharnowski', 'target': 'Thomas Ertl'}, {'source': 'Guido Reina', 'target': 'Silvia Fademrecht'}, {'source': 'Guido Reina', 'target': 'Tobias Kulschewski'}, {'source': 'Guido Reina', 'target': 'Jürgen Pleiss'}, {'source': 'Guido Reina', 'target': 'Thomas Ertl'}, {'source': 'Silvia Fademrecht', 'target': 'Tobias Kulschewski'}, {'source': 'Silvia Fademrecht', 'target': 'Jürgen Pleiss'}, {'source': 'Silvia Fademrecht', 'target': 'Thomas Ertl'}, {'source': 'Tobias Kulschewski', 'target': 'Jürgen Pleiss'}, {'source': 'Tobias Kulschewski', 'target': 'Thomas Ertl'}, {'source': 'Jürgen Pleiss', 'target': 'Thomas Ertl'}], [{'source': 'Pedro Hermosilla', 'target': 'Jorge Estrada'}, {'source': 'Pedro Hermosilla', 'target': 'Victor Guallar'}, {'source': 'Pedro Hermosilla', 'target': 'Timo Ropinski'}, {'source': 'Pedro Hermosilla', 'target': 'Àlvar Vinacua'}, {'source': 'Pedro Hermosilla', 'target': 'Pere-Pau Vázquez'}, {'source': 'Jorge Estrada', 'target': 'Victor Guallar'}, {'source': 'Jorge Estrada', 'target': 'Timo Ropinski'}, {'source': 'Jorge Estrada', 'target': 'Àlvar Vinacua'}, {'source': 'Jorge Estrada', 'target': 'Pere-Pau Vázquez'}, {'source': 'Victor Guallar', 'target': 'Timo Ropinski'}, {'source': 'Victor Guallar', 'target': 'Àlvar Vinacua'}, {'source': 'Victor Guallar', 'target': 'Pere-Pau Vázquez'}, {'source': 'Timo Ropinski', 'target': 'Àlvar Vinacua'}, {'source': 'Timo Ropinski', 'target': 'Pere-Pau Vázquez'}, {'source': 'Àlvar Vinacua', 'target': 'Pere-Pau Vázquez'}], [{'source': 'Noeska Smit', 'target': 'Kai Lawonn'}, {'source': 'Noeska Smit', 'target': 'Annelot Kraima'}, {'source': 'Noeska Smit', 'target': 'Marco DeRuiter'}, {'source': 'Noeska Smit', 'target': 'Hessam Sokooti'}, {'source': 'Noeska Smit', 'target': 'Stefan Bruckner'}, {'source': 'Noeska Smit', 'target': 'Elmar Eisemann'}, {'source': 'Noeska Smit', 'target': 'Anna Vilanova'}, {'source': 'Kai Lawonn', 'target': 'Annelot Kraima'}, {'source': 'Kai Lawonn', 'target': 'Marco DeRuiter'}, {'source': 'Kai Lawonn', 'target': 'Hessam Sokooti'}, {'source': 'Kai Lawonn', 'target': 'Stefan Bruckner'}, {'source': 'Kai Lawonn', 'target': 'Elmar Eisemann'}, {'source': 'Kai Lawonn', 'target': 'Anna Vilanova'}, {'source': 'Annelot Kraima', 'target': 'Marco DeRuiter'}, {'source': 'Annelot Kraima', 'target': 'Hessam Sokooti'}, {'source': 'Annelot Kraima', 'target': 'Stefan Bruckner'}, {'source': 'Annelot Kraima', 'target': 'Elmar Eisemann'}, {'source': 'Annelot Kraima', 'target': 'Anna Vilanova'}, {'source': 'Marco DeRuiter', 'target': 'Hessam Sokooti'}, {'source': 'Marco DeRuiter', 'target': 'Stefan Bruckner'}, {'source': 'Marco DeRuiter', 'target': 'Elmar Eisemann'}, {'source': 'Marco DeRuiter', 'target': 'Anna Vilanova'}, {'source': 'Hessam Sokooti', 'target': 'Stefan Bruckner'}, {'source': 'Hessam Sokooti', 'target': 'Elmar Eisemann'}, {'source': 'Hessam Sokooti', 'target': 'Anna Vilanova'}, {'source': 'Stefan Bruckner', 'target': 'Elmar Eisemann'}, {'source': 'Stefan Bruckner', 'target': 'Anna Vilanova'}, {'source': 'Elmar Eisemann', 'target': 'Anna Vilanova'}], [{'source': 'Petra Isenberg', 'target': 'Tobias Isenberg'}, {'source': 'Petra Isenberg', 'target': 'Michael Sedlmair'}, {'source': 'Petra Isenberg', 'target': 'Jian Chen'}, {'source': 'Petra Isenberg', 'target': 'Torsten Möller'}, {'source': 'Tobias Isenberg', 'target': 'Michael Sedlmair'}, {'source': 'Tobias Isenberg', 'target': 'Jian Chen'}, {'source': 'Tobias Isenberg', 'target': 'Torsten Möller'}, {'source': 'Michael Sedlmair', 'target': 'Jian Chen'}, {'source': 'Michael Sedlmair', 'target': 'Torsten Möller'}, {'source': 'Jian Chen', 'target': 'Torsten Möller'}], [{'source': 'Allan Rocha', 'target': 'Usman Alim'}, {'source': 'Allan Rocha', 'target': 'Julio Daniel Silva'}, {'source': 'Allan Rocha', 'target': 'Mario Costa Sousa'}, {'source': 'Usman Alim', 'target': 'Julio Daniel Silva'}, {'source': 'Usman Alim', 'target': 'Mario Costa Sousa'}, {'source': 'Julio Daniel Silva', 'target': 'Mario Costa Sousa'}], [{'source': 'Florian Ferstl', 'target': 'Mathias Kanzler'}, {'source': 'Florian Ferstl', 'target': 'Marc Rautenhaus'}, {'source': 'Florian Ferstl', 'target': 'Rüdiger Westermann'}, {'source': 'Mathias Kanzler', 'target': 'Marc Rautenhaus'}, {'source': 'Mathias Kanzler', 'target': 'Rüdiger Westermann'}, {'source': 'Marc Rautenhaus', 'target': 'Rüdiger Westermann'}], [{'source': 'Ayan Biswas', 'target': 'Guang Lin'}, {'source': 'Ayan Biswas', 'target': 'Xiaotong Liu'}, {'source': 'Ayan Biswas', 'target': 'Han-Wei Shen'}, {'source': 'Guang Lin', 'target': 'Xiaotong Liu'}, {'source': 'Guang Lin', 'target': 'Han-Wei Shen'}, {'source': 'Xiaotong Liu', 'target': 'Han-Wei Shen'}], [{'source': 'Ivan Kolesár', 'target': 'Stefan Bruckner'}, {'source': 'Ivan Kolesár', 'target': 'Ivan Viola'}, {'source': 'Ivan Kolesár', 'target': 'Helwig Hauser'}, {'source': 'Stefan Bruckner', 'target': 'Ivan Viola'}, {'source': 'Stefan Bruckner', 'target': 'Helwig Hauser'}, {'source': 'Ivan Viola', 'target': 'Helwig Hauser'}], [{'source': 'Tim Gerrits', 'target': 'Christian Rössl'}, {'source': 'Tim Gerrits', 'target': 'Holger Theisel'}, {'source': 'Christian Rössl', 'target': 'Holger Theisel'}], [{'source': 'Tobias Günther', 'target': 'Holger Theisel'}], [{'source': 'Julien Tierny', 'target': 'Hamish Carr'}], [{'source': 'Antoni Sagristà', 'target': 'Stefan Jordan'}, {'source': 'Antoni Sagristà', 'target': 'Andreas Just'}, {'source': 'Antoni Sagristà', 'target': 'Fabio Dias'}, {'source': 'Antoni Sagristà', 'target': 'Luis Gustavo Nonato'}, {'source': 'Antoni Sagristà', 'target': 'Filip Sadlo'}, {'source': 'Stefan Jordan', 'target': 'Andreas Just'}, {'source': 'Stefan Jordan', 'target': 'Fabio Dias'}, {'source': 'Stefan Jordan', 'target': 'Luis Gustavo Nonato'}, {'source': 'Stefan Jordan', 'target': 'Filip Sadlo'}, {'source': 'Andreas Just', 'target': 'Fabio Dias'}, {'source': 'Andreas Just', 'target': 'Luis Gustavo Nonato'}, {'source': 'Andreas Just', 'target': 'Filip Sadlo'}, {'source': 'Fabio Dias', 'target': 'Luis Gustavo Nonato'}, {'source': 'Fabio Dias', 'target': 'Filip Sadlo'}, {'source': 'Luis Gustavo Nonato', 'target': 'Filip Sadlo'}], [{'source': 'Kui Wu', 'target': 'Aaron Knoll'}, {'source': 'Kui Wu', 'target': 'Benjamin J Isaac'}, {'source': 'Kui Wu', 'target': 'Hamish Carr'}, {'source': 'Kui Wu', 'target': 'Valerio Pascucci'}, {'source': 'Aaron Knoll', 'target': 'Benjamin J Isaac'}, {'source': 'Aaron Knoll', 'target': 'Hamish Carr'}, {'source': 'Aaron Knoll', 'target': 'Valerio Pascucci'}, {'source': 'Benjamin J Isaac', 'target': 'Hamish Carr'}, {'source': 'Benjamin J Isaac', 'target': 'Valerio Pascucci'}, {'source': 'Hamish Carr', 'target': 'Valerio Pascucci'}], [{'source': 'I Wald', 'target': 'GP Johnson'}, {'source': 'I Wald', 'target': 'J Amstutz'}, {'source': 'I Wald', 'target': 'C Brownlee'}, {'source': 'I Wald', 'target': 'A Knoll'}, {'source': 'I Wald', 'target': 'J Jeffers'}, {'source': 'I Wald', 'target': 'J Günther'}, {'source': 'I Wald', 'target': 'P Navratil'}, {'source': 'GP Johnson', 'target': 'J Amstutz'}, {'source': 'GP Johnson', 'target': 'C Brownlee'}, {'source': 'GP Johnson', 'target': 'A Knoll'}, {'source': 'GP Johnson', 'target': 'J Jeffers'}, {'source': 'GP Johnson', 'target': 'J Günther'}, {'source': 'GP Johnson', 'target': 'P Navratil'}, {'source': 'J Amstutz', 'target': 'C Brownlee'}, {'source': 'J Amstutz', 'target': 'A Knoll'}, {'source': 'J Amstutz', 'target': 'J Jeffers'}, {'source': 'J Amstutz', 'target': 'J Günther'}, {'source': 'J Amstutz', 'target': 'P Navratil'}, {'source': 'C Brownlee', 'target': 'A Knoll'}, {'source': 'C Brownlee', 'target': 'J Jeffers'}, {'source': 'C Brownlee', 'target': 'J Günther'}, {'source': 'C Brownlee', 'target': 'P Navratil'}, {'source': 'A Knoll', 'target': 'J Jeffers'}, {'source': 'A Knoll', 'target': 'J Günther'}, {'source': 'A Knoll', 'target': 'P Navratil'}, {'source': 'J Jeffers', 'target': 'J Günther'}, {'source': 'J Jeffers', 'target': 'P Navratil'}, {'source': 'J Günther', 'target': 'P Navratil'}], [{'source': 'Steffen Frey', 'target': 'Thomas Ertl'}], [{'source': 'Jens Schneider', 'target': 'Peter Rautek'}], [{'source': 'Xin Tong', 'target': 'Cheng Li'}, {'source': 'Xin Tong', 'target': 'Han-Wei Shen'}, {'source': 'Cheng Li', 'target': 'Han-Wei Shen'}], [{'source': 'Sergej Stoppel', 'target': 'Stefan Bruckner'}], [{'source': 'H. Fang', 'target': 'S. Walton'}, {'source': 'H. Fang', 'target': 'E. Delahaye'}, {'source': 'H. Fang', 'target': 'J. Harris'}, {'source': 'H. Fang', 'target': 'D. A. Storchak'}, {'source': 'H. Fang', 'target': 'M. Chen'}, {'source': 'S. Walton', 'target': 'E. Delahaye'}, {'source': 'S. Walton', 'target': 'J. Harris'}, {'source': 'S. Walton', 'target': 'D. A. Storchak'}, {'source': 'S. Walton', 'target': 'M. Chen'}, {'source': 'E. Delahaye', 'target': 'J. Harris'}, {'source': 'E. Delahaye', 'target': 'D. A. Storchak'}, {'source': 'E. Delahaye', 'target': 'M. Chen'}, {'source': 'J. Harris', 'target': 'D. A. Storchak'}, {'source': 'J. Harris', 'target': 'M. Chen'}, {'source': 'D. A. Storchak', 'target': 'M. Chen'}], [{'source': 'Lonni Besançon', 'target': 'Paul Issartel'}, {'source': 'Lonni Besançon', 'target': 'Mehdi Ammi'}, {'source': 'Lonni Besançon', 'target': 'Tobias Isenberg'}, {'source': 'Paul Issartel', 'target': 'Mehdi Ammi'}, {'source': 'Paul Issartel', 'target': 'Tobias Isenberg'}, {'source': 'Mehdi Ammi', 'target': 'Tobias Isenberg'}], [{'source': 'Quan Li', 'target': 'Peng Xu'}, {'source': 'Quan Li', 'target': 'Yeuk Yin Chan'}, {'source': 'Quan Li', 'target': 'Yun Wang'}, {'source': 'Quan Li', 'target': 'Zhipeng Wang'}, {'source': 'Quan Li', 'target': 'Huamin Qu'}, {'source': 'Quan Li', 'target': 'Xiaojuan Ma'}, {'source': 'Peng Xu', 'target': 'Yeuk Yin Chan'}, {'source': 'Peng Xu', 'target': 'Yun Wang'}, {'source': 'Peng Xu', 'target': 'Zhipeng Wang'}, {'source': 'Peng Xu', 'target': 'Huamin Qu'}, {'source': 'Peng Xu', 'target': 'Xiaojuan Ma'}, {'source': 'Yeuk Yin Chan', 'target': 'Yun Wang'}, {'source': 'Yeuk Yin Chan', 'target': 'Zhipeng Wang'}, {'source': 'Yeuk Yin Chan', 'target': 'Huamin Qu'}, {'source': 'Yeuk Yin Chan', 'target': 'Xiaojuan Ma'}, {'source': 'Yun Wang', 'target': 'Zhipeng Wang'}, {'source': 'Yun Wang', 'target': 'Huamin Qu'}, {'source': 'Yun Wang', 'target': 'Xiaojuan Ma'}, {'source': 'Zhipeng Wang', 'target': 'Huamin Qu'}, {'source': 'Zhipeng Wang', 'target': 'Xiaojuan Ma'}, {'source': 'Huamin Qu', 'target': 'Xiaojuan Ma'}], [{'source': 'Shamal Al-Dohuki', 'target': 'Yingyu Wu'}, {'source': 'Shamal Al-Dohuki', 'target': 'Farah Kamw'}, {'source': 'Shamal Al-Dohuki', 'target': 'Jing Yang'}, {'source': 'Shamal Al-Dohuki', 'target': 'Xin Li'}, {'source': 'Shamal Al-Dohuki', 'target': 'Ye Zhao'}, {'source': 'Shamal Al-Dohuki', 'target': 'Xinyue Ye'}, {'source': 'Shamal Al-Dohuki', 'target': 'Wei Chen'}, {'source': 'Shamal Al-Dohuki', 'target': 'Chao Ma'}, {'source': 'Shamal Al-Dohuki', 'target': 'Fei Wang'}, {'source': 'Yingyu Wu', 'target': 'Farah Kamw'}, {'source': 'Yingyu Wu', 'target': 'Jing Yang'}, {'source': 'Yingyu Wu', 'target': 'Xin Li'}, {'source': 'Yingyu Wu', 'target': 'Ye Zhao'}, {'source': 'Yingyu Wu', 'target': 'Xinyue Ye'}, {'source': 'Yingyu Wu', 'target': 'Wei Chen'}, {'source': 'Yingyu Wu', 'target': 'Chao Ma'}, {'source': 'Yingyu Wu', 'target': 'Fei Wang'}, {'source': 'Farah Kamw', 'target': 'Jing Yang'}, {'source': 'Farah Kamw', 'target': 'Xin Li'}, {'source': 'Farah Kamw', 'target': 'Ye Zhao'}, {'source': 'Farah Kamw', 'target': 'Xinyue Ye'}, {'source': 'Farah Kamw', 'target': 'Wei Chen'}, {'source': 'Farah Kamw', 'target': 'Chao Ma'}, {'source': 'Farah Kamw', 'target': 'Fei Wang'}, {'source': 'Jing Yang', 'target': 'Xin Li'}, {'source': 'Jing Yang', 'target': 'Ye Zhao'}, {'source': 'Jing Yang', 'target': 'Xinyue Ye'}, {'source': 'Jing Yang', 'target': 'Wei Chen'}, {'source': 'Jing Yang', 'target': 'Chao Ma'}, {'source': 'Jing Yang', 'target': 'Fei Wang'}, {'source': 'Xin Li', 'target': 'Ye Zhao'}, {'source': 'Xin Li', 'target': 'Xinyue Ye'}, {'source': 'Xin Li', 'target': 'Wei Chen'}, {'source': 'Xin Li', 'target': 'Chao Ma'}, {'source': 'Xin Li', 'target': 'Fei Wang'}, {'source': 'Ye Zhao', 'target': 'Xinyue Ye'}, {'source': 'Ye Zhao', 'target': 'Wei Chen'}, {'source': 'Ye Zhao', 'target': 'Chao Ma'}, {'source': 'Ye Zhao', 'target': 'Fei Wang'}, {'source': 'Xinyue Ye', 'target': 'Wei Chen'}, {'source': 'Xinyue Ye', 'target': 'Chao Ma'}, {'source': 'Xinyue Ye', 'target': 'Fei Wang'}, {'source': 'Wei Chen', 'target': 'Chao Ma'}, {'source': 'Wei Chen', 'target': 'Fei Wang'}, {'source': 'Chao Ma', 'target': 'Fei Wang'}], [{'source': 'Dongyu Liu', 'target': 'Di Weng'}, {'source': 'Dongyu Liu', 'target': 'Yuhong Li'}, {'source': 'Dongyu Liu', 'target': 'Jie Bao'}, {'source': 'Dongyu Liu', 'target': 'Yu Zheng'}, {'source': 'Dongyu Liu', 'target': 'Huamin Qu'}, {'source': 'Dongyu Liu', 'target': 'Yingcai Wu'}, {'source': 'Di Weng', 'target': 'Yuhong Li'}, {'source': 'Di Weng', 'target': 'Jie Bao'}, {'source': 'Di Weng', 'target': 'Yu Zheng'}, {'source': 'Di Weng', 'target': 'Huamin Qu'}, {'source': 'Di Weng', 'target': 'Yingcai Wu'}, {'source': 'Yuhong Li', 'target': 'Jie Bao'}, {'source': 'Yuhong Li', 'target': 'Yu Zheng'}, {'source': 'Yuhong Li', 'target': 'Huamin Qu'}, {'source': 'Yuhong Li', 'target': 'Yingcai Wu'}, {'source': 'Jie Bao', 'target': 'Yu Zheng'}, {'source': 'Jie Bao', 'target': 'Huamin Qu'}, {'source': 'Jie Bao', 'target': 'Yingcai Wu'}, {'source': 'Yu Zheng', 'target': 'Huamin Qu'}, {'source': 'Yu Zheng', 'target': 'Yingcai Wu'}, {'source': 'Huamin Qu', 'target': 'Yingcai Wu'}], [{'source': 'Siwei Fu', 'target': 'Jian Zhao'}, {'source': 'Siwei Fu', 'target': 'Weiwei Cui'}, {'source': 'Siwei Fu', 'target': 'Huamin Qu'}, {'source': 'Jian Zhao', 'target': 'Weiwei Cui'}, {'source': 'Jian Zhao', 'target': 'Huamin Qu'}, {'source': 'Weiwei Cui', 'target': 'Huamin Qu'}], [{'source': 'Minjeong Kim', 'target': 'Kyeongpil Kang'}, {'source': 'Minjeong Kim', 'target': 'Deokgun Park'}, {'source': 'Minjeong Kim', 'target': 'Jaegul Choo'}, {'source': 'Minjeong Kim', 'target': 'Niklas Elmqvist'}, {'source': 'Kyeongpil Kang', 'target': 'Deokgun Park'}, {'source': 'Kyeongpil Kang', 'target': 'Jaegul Choo'}, {'source': 'Kyeongpil Kang', 'target': 'Niklas Elmqvist'}, {'source': 'Deokgun Park', 'target': 'Jaegul Choo'}, {'source': 'Deokgun Park', 'target': 'Niklas Elmqvist'}, {'source': 'Jaegul Choo', 'target': 'Niklas Elmqvist'}], [{'source': 'Bum Chul Kwon', 'target': 'Hannah Kim'}, {'source': 'Bum Chul Kwon', 'target': 'Emily Wall'}, {'source': 'Bum Chul Kwon', 'target': 'Jaegul Choo'}, {'source': 'Bum Chul Kwon', 'target': 'Haesun Park'}, {'source': 'Bum Chul Kwon', 'target': 'Alex Endert'}, {'source': 'Hannah Kim', 'target': 'Emily Wall'}, {'source': 'Hannah Kim', 'target': 'Jaegul Choo'}, {'source': 'Hannah Kim', 'target': 'Haesun Park'}, {'source': 'Hannah Kim', 'target': 'Alex Endert'}, {'source': 'Emily Wall', 'target': 'Jaegul Choo'}, {'source': 'Emily Wall', 'target': 'Haesun Park'}, {'source': 'Emily Wall', 'target': 'Alex Endert'}, {'source': 'Jaegul Choo', 'target': 'Haesun Park'}, {'source': 'Jaegul Choo', 'target': 'Alex Endert'}, {'source': 'Haesun Park', 'target': 'Alex Endert'}], [{'source': 'Cristian Felix', 'target': 'Anshul Vikram Pandey'}, {'source': 'Cristian Felix', 'target': 'Enrico Bertini'}, {'source': 'Anshul Vikram Pandey', 'target': 'Enrico Bertini'}], [{'source': 'R. Jordan Crouser', 'target': 'Lyndsey Franklin'}, {'source': 'R. Jordan Crouser', 'target': 'Alex Endert'}, {'source': 'R. Jordan Crouser', 'target': 'Kris Cook'}, {'source': 'Lyndsey Franklin', 'target': 'Alex Endert'}, {'source': 'Lyndsey Franklin', 'target': 'Kris Cook'}, {'source': 'Alex Endert', 'target': 'Kris Cook'}], [{'source': 'Ievgeniia Gutenko', 'target': 'Konstantin Dmitriev'}, {'source': 'Ievgeniia Gutenko', 'target': 'Arie E. Kaufman'}, {'source': 'Ievgeniia Gutenko', 'target': 'Matthew A. Barish'}, {'source': 'Konstantin Dmitriev', 'target': 'Arie E. Kaufman'}, {'source': 'Konstantin Dmitriev', 'target': 'Matthew A. Barish'}, {'source': 'Arie E. Kaufman', 'target': 'Matthew A. Barish'}], [{'source': 'Qiaomu Shen', 'target': 'Tongshuang Wu'}, {'source': 'Qiaomu Shen', 'target': 'Haiyan Yang'}, {'source': 'Qiaomu Shen', 'target': 'Yanhong Wu'}, {'source': 'Qiaomu Shen', 'target': 'Huamin Qu'}, {'source': 'Qiaomu Shen', 'target': 'Weiwei Cui'}, {'source': 'Tongshuang Wu', 'target': 'Haiyan Yang'}, {'source': 'Tongshuang Wu', 'target': 'Yanhong Wu'}, {'source': 'Tongshuang Wu', 'target': 'Huamin Qu'}, {'source': 'Tongshuang Wu', 'target': 'Weiwei Cui'}, {'source': 'Haiyan Yang', 'target': 'Yanhong Wu'}, {'source': 'Haiyan Yang', 'target': 'Huamin Qu'}, {'source': 'Haiyan Yang', 'target': 'Weiwei Cui'}, {'source': 'Yanhong Wu', 'target': 'Huamin Qu'}, {'source': 'Yanhong Wu', 'target': 'Weiwei Cui'}, {'source': 'Huamin Qu', 'target': 'Weiwei Cui'}], [{'source': 'Ali Sarvghad', 'target': 'Melanie Tory'}, {'source': 'Ali Sarvghad', 'target': 'Narges Mahyar'}, {'source': 'Melanie Tory', 'target': 'Narges Mahyar'}], [{'source': 'Michael Behrisch', 'target': 'Benjamin Bach'}, {'source': 'Michael Behrisch', 'target': 'Michael Hund'}, {'source': 'Michael Behrisch', 'target': 'Michael Delz'}, {'source': 'Michael Behrisch', 'target': 'Laura Von Rüden'}, {'source': 'Michael Behrisch', 'target': 'Jean-Daniel Fekete'}, {'source': 'Michael Behrisch', 'target': 'Tobias Schreck'}, {'source': 'Benjamin Bach', 'target': 'Michael Hund'}, {'source': 'Benjamin Bach', 'target': 'Michael Delz'}, {'source': 'Benjamin Bach', 'target': 'Laura Von Rüden'}, {'source': 'Benjamin Bach', 'target': 'Jean-Daniel Fekete'}, {'source': 'Benjamin Bach', 'target': 'Tobias Schreck'}, {'source': 'Michael Hund', 'target': 'Michael Delz'}, {'source': 'Michael Hund', 'target': 'Laura Von Rüden'}, {'source': 'Michael Hund', 'target': 'Jean-Daniel Fekete'}, {'source': 'Michael Hund', 'target': 'Tobias Schreck'}, {'source': 'Michael Delz', 'target': 'Laura Von Rüden'}, {'source': 'Michael Delz', 'target': 'Jean-Daniel Fekete'}, {'source': 'Michael Delz', 'target': 'Tobias Schreck'}, {'source': 'Laura Von Rüden', 'target': 'Jean-Daniel Fekete'}, {'source': 'Laura Von Rüden', 'target': 'Tobias Schreck'}, {'source': 'Jean-Daniel Fekete', 'target': 'Tobias Schreck'}], [{'source': 'Davide Ceneda', 'target': 'Theresia Gschwandtner'}, {'source': 'Davide Ceneda', 'target': 'Thorsten May'}, {'source': 'Davide Ceneda', 'target': 'Silvia Miksch'}, {'source': 'Davide Ceneda', 'target': 'Hans-Jörg Schulz'}, {'source': 'Davide Ceneda', 'target': 'Marc Streit'}, {'source': 'Davide Ceneda', 'target': 'Christian Tominski'}, {'source': 'Theresia Gschwandtner', 'target': 'Thorsten May'}, {'source': 'Theresia Gschwandtner', 'target': 'Silvia Miksch'}, {'source': 'Theresia Gschwandtner', 'target': 'Hans-Jörg Schulz'}, {'source': 'Theresia Gschwandtner', 'target': 'Marc Streit'}, {'source': 'Theresia Gschwandtner', 'target': 'Christian Tominski'}, {'source': 'Thorsten May', 'target': 'Silvia Miksch'}, {'source': 'Thorsten May', 'target': 'Hans-Jörg Schulz'}, {'source': 'Thorsten May', 'target': 'Marc Streit'}, {'source': 'Thorsten May', 'target': 'Christian Tominski'}, {'source': 'Silvia Miksch', 'target': 'Hans-Jörg Schulz'}, {'source': 'Silvia Miksch', 'target': 'Marc Streit'}, {'source': 'Silvia Miksch', 'target': 'Christian Tominski'}, {'source': 'Hans-Jörg Schulz', 'target': 'Marc Streit'}, {'source': 'Hans-Jörg Schulz', 'target': 'Christian Tominski'}, {'source': 'Marc Streit', 'target': 'Christian Tominski'}], [{'source': 'Michael Glueck', 'target': 'Alina Gvozdik'}, {'source': 'Michael Glueck', 'target': 'Fanny Chevalier'}, {'source': 'Michael Glueck', 'target': 'Azam Khan'}, {'source': 'Michael Glueck', 'target': 'Michael Brudno'}, {'source': 'Michael Glueck', 'target': 'Daniel Wigdor'}, {'source': 'Alina Gvozdik', 'target': 'Fanny Chevalier'}, {'source': 'Alina Gvozdik', 'target': 'Azam Khan'}, {'source': 'Alina Gvozdik', 'target': 'Michael Brudno'}, {'source': 'Alina Gvozdik', 'target': 'Daniel Wigdor'}, {'source': 'Fanny Chevalier', 'target': 'Azam Khan'}, {'source': 'Fanny Chevalier', 'target': 'Michael Brudno'}, {'source': 'Fanny Chevalier', 'target': 'Daniel Wigdor'}, {'source': 'Azam Khan', 'target': 'Michael Brudno'}, {'source': 'Azam Khan', 'target': 'Daniel Wigdor'}, {'source': 'Michael Brudno', 'target': 'Daniel Wigdor'}], [{'source': 'Cagatay Turkay', 'target': 'Erdem Kaya'}, {'source': 'Cagatay Turkay', 'target': 'Selim Balcisoy'}, {'source': 'Cagatay Turkay', 'target': 'Helwig Hauser'}, {'source': 'Erdem Kaya', 'target': 'Selim Balcisoy'}, {'source': 'Erdem Kaya', 'target': 'Helwig Hauser'}, {'source': 'Selim Balcisoy', 'target': 'Helwig Hauser'}], [{'source': 'Filip Dabek', 'target': 'Jesus J Caban'}], [{'source': 'Xinsong Yang', 'target': 'Lei Shi'}, {'source': 'Xinsong Yang', 'target': 'Madelaine Daianu'}, {'source': 'Xinsong Yang', 'target': 'Hanghang Tong'}, {'source': 'Xinsong Yang', 'target': 'Qingsong Liu'}, {'source': 'Xinsong Yang', 'target': 'Paul Thompson'}, {'source': 'Lei Shi', 'target': 'Madelaine Daianu'}, {'source': 'Lei Shi', 'target': 'Hanghang Tong'}, {'source': 'Lei Shi', 'target': 'Qingsong Liu'}, {'source': 'Lei Shi', 'target': 'Paul Thompson'}, {'source': 'Madelaine Daianu', 'target': 'Hanghang Tong'}, {'source': 'Madelaine Daianu', 'target': 'Qingsong Liu'}, {'source': 'Madelaine Daianu', 'target': 'Paul Thompson'}, {'source': 'Hanghang Tong', 'target': 'Qingsong Liu'}, {'source': 'Hanghang Tong', 'target': 'Paul Thompson'}, {'source': 'Qingsong Liu', 'target': 'Paul Thompson'}], [{'source': 'Cong Xie', 'target': 'Wen Zhong'}, {'source': 'Cong Xie', 'target': 'Klaus Mueller'}, {'source': 'Wen Zhong', 'target': 'Klaus Mueller'}], [{'source': 'Dominik Sacha', 'target': 'Leishi Zhang'}, {'source': 'Dominik Sacha', 'target': 'Michael Sedlmair'}, {'source': 'Dominik Sacha', 'target': 'John A. Lee'}, {'source': 'Dominik Sacha', 'target': 'Jaakko Peltonen'}, {'source': 'Dominik Sacha', 'target': 'Daniel Weiskopf'}, {'source': 'Dominik Sacha', 'target': 'Stephen C. North'}, {'source': 'Dominik Sacha', 'target': 'Daniel A. Keim'}, {'source': 'Leishi Zhang', 'target': 'Michael Sedlmair'}, {'source': 'Leishi Zhang', 'target': 'John A. Lee'}, {'source': 'Leishi Zhang', 'target': 'Jaakko Peltonen'}, {'source': 'Leishi Zhang', 'target': 'Daniel Weiskopf'}, {'source': 'Leishi Zhang', 'target': 'Stephen C. North'}, {'source': 'Leishi Zhang', 'target': 'Daniel A. Keim'}, {'source': 'Michael Sedlmair', 'target': 'John A. Lee'}, {'source': 'Michael Sedlmair', 'target': 'Jaakko Peltonen'}, {'source': 'Michael Sedlmair', 'target': 'Daniel Weiskopf'}, {'source': 'Michael Sedlmair', 'target': 'Stephen C. North'}, {'source': 'Michael Sedlmair', 'target': 'Daniel A. Keim'}, {'source': 'John A. Lee', 'target': 'Jaakko Peltonen'}, {'source': 'John A. Lee', 'target': 'Daniel Weiskopf'}, {'source': 'John A. Lee', 'target': 'Stephen C. North'}, {'source': 'John A. Lee', 'target': 'Daniel A. Keim'}, {'source': 'Jaakko Peltonen', 'target': 'Daniel Weiskopf'}, {'source': 'Jaakko Peltonen', 'target': 'Stephen C. North'}, {'source': 'Jaakko Peltonen', 'target': 'Daniel A. Keim'}, {'source': 'Daniel Weiskopf', 'target': 'Stephen C. North'}, {'source': 'Daniel Weiskopf', 'target': 'Daniel A. Keim'}, {'source': 'Stephen C. North', 'target': 'Daniel A. Keim'}], [{'source': 'Bowen Yu', 'target': 'Cláudio T. Silva'}], [{'source': 'Jian Zhao', 'target': 'Michael Glueck'}, {'source': 'Jian Zhao', 'target': 'Simon Breslav'}, {'source': 'Jian Zhao', 'target': 'Fanny Chevalier'}, {'source': 'Jian Zhao', 'target': 'Azam Khan'}, {'source': 'Michael Glueck', 'target': 'Simon Breslav'}, {'source': 'Michael Glueck', 'target': 'Fanny Chevalier'}, {'source': 'Michael Glueck', 'target': 'Azam Khan'}, {'source': 'Simon Breslav', 'target': 'Fanny Chevalier'}, {'source': 'Simon Breslav', 'target': 'Azam Khan'}, {'source': 'Fanny Chevalier', 'target': 'Azam Khan'}], [{'source': 'Aritra Dasgupta', 'target': 'Joon-Yong Lee'}, {'source': 'Aritra Dasgupta', 'target': 'Ryan Wilson'}, {'source': 'Aritra Dasgupta', 'target': 'Robert A. Lafrance'}, {'source': 'Aritra Dasgupta', 'target': 'Nick Cramer'}, {'source': 'Aritra Dasgupta', 'target': 'Kristin Cook'}, {'source': 'Aritra Dasgupta', 'target': 'Samuel Payne'}, {'source': 'Joon-Yong Lee', 'target': 'Ryan Wilson'}, {'source': 'Joon-Yong Lee', 'target': 'Robert A. Lafrance'}, {'source': 'Joon-Yong Lee', 'target': 'Nick Cramer'}, {'source': 'Joon-Yong Lee', 'target': 'Kristin Cook'}, {'source': 'Joon-Yong Lee', 'target': 'Samuel Payne'}, {'source': 'Ryan Wilson', 'target': 'Robert A. Lafrance'}, {'source': 'Ryan Wilson', 'target': 'Nick Cramer'}, {'source': 'Ryan Wilson', 'target': 'Kristin Cook'}, {'source': 'Ryan Wilson', 'target': 'Samuel Payne'}, {'source': 'Robert A. Lafrance', 'target': 'Nick Cramer'}, {'source': 'Robert A. Lafrance', 'target': 'Kristin Cook'}, {'source': 'Robert A. Lafrance', 'target': 'Samuel Payne'}, {'source': 'Nick Cramer', 'target': 'Kristin Cook'}, {'source': 'Nick Cramer', 'target': 'Samuel Payne'}, {'source': 'Kristin Cook', 'target': 'Samuel Payne'}], [{'source': 'Sarah Goodwin', 'target': 'Christopher Mears'}, {'source': 'Sarah Goodwin', 'target': 'Tim Dwyer'}, {'source': 'Sarah Goodwin', 'target': 'Maria Garcia de la Banda'}, {'source': 'Sarah Goodwin', 'target': 'Guido Tack'}, {'source': 'Sarah Goodwin', 'target': 'Mark Wallace'}, {'source': 'Christopher Mears', 'target': 'Tim Dwyer'}, {'source': 'Christopher Mears', 'target': 'Maria Garcia de la Banda'}, {'source': 'Christopher Mears', 'target': 'Guido Tack'}, {'source': 'Christopher Mears', 'target': 'Mark Wallace'}, {'source': 'Tim Dwyer', 'target': 'Maria Garcia de la Banda'}, {'source': 'Tim Dwyer', 'target': 'Guido Tack'}, {'source': 'Tim Dwyer', 'target': 'Mark Wallace'}, {'source': 'Maria Garcia de la Banda', 'target': 'Guido Tack'}, {'source': 'Maria Garcia de la Banda', 'target': 'Mark Wallace'}, {'source': 'Guido Tack', 'target': 'Mark Wallace'}], [{'source': 'Panpan Xu', 'target': 'Honghui Mei'}, {'source': 'Panpan Xu', 'target': 'Liu Ren'}, {'source': 'Panpan Xu', 'target': 'Wei Chen'}, {'source': 'Honghui Mei', 'target': 'Liu Ren'}, {'source': 'Honghui Mei', 'target': 'Wei Chen'}, {'source': 'Liu Ren', 'target': 'Wei Chen'}], [{'source': 'Kuno Kurzhals', 'target': 'Marcel Hlawatsch'}, {'source': 'Kuno Kurzhals', 'target': 'Christof Seeger'}, {'source': 'Kuno Kurzhals', 'target': 'Daniel Weiskopf'}, {'source': 'Marcel Hlawatsch', 'target': 'Christof Seeger'}, {'source': 'Marcel Hlawatsch', 'target': 'Daniel Weiskopf'}, {'source': 'Christof Seeger', 'target': 'Daniel Weiskopf'}], [{'source': 'Hyunjoo Song', 'target': 'Jeongjin Lee'}, {'source': 'Hyunjoo Song', 'target': 'Tae Jung Kim'}, {'source': 'Hyunjoo Song', 'target': 'Kyoung Ho Lee'}, {'source': 'Hyunjoo Song', 'target': 'Bohyoung Kim'}, {'source': 'Hyunjoo Song', 'target': 'Jinwook Seo'}, {'source': 'Jeongjin Lee', 'target': 'Tae Jung Kim'}, {'source': 'Jeongjin Lee', 'target': 'Kyoung Ho Lee'}, {'source': 'Jeongjin Lee', 'target': 'Bohyoung Kim'}, {'source': 'Jeongjin Lee', 'target': 'Jinwook Seo'}, {'source': 'Tae Jung Kim', 'target': 'Kyoung Ho Lee'}, {'source': 'Tae Jung Kim', 'target': 'Bohyoung Kim'}, {'source': 'Tae Jung Kim', 'target': 'Jinwook Seo'}, {'source': 'Kyoung Ho Lee', 'target': 'Bohyoung Kim'}, {'source': 'Kyoung Ho Lee', 'target': 'Jinwook Seo'}, {'source': 'Bohyoung Kim', 'target': 'Jinwook Seo'}], [{'source': 'Zhicheng Liu', 'target': 'Yang Wang'}, {'source': 'Zhicheng Liu', 'target': 'Mira Dontcheva'}, {'source': 'Zhicheng Liu', 'target': 'Matthew Hoffman'}, {'source': 'Zhicheng Liu', 'target': 'Seth Walker'}, {'source': 'Zhicheng Liu', 'target': 'Alan Wilson'}, {'source': 'Yang Wang', 'target': 'Mira Dontcheva'}, {'source': 'Yang Wang', 'target': 'Matthew Hoffman'}, {'source': 'Yang Wang', 'target': 'Seth Walker'}, {'source': 'Yang Wang', 'target': 'Alan Wilson'}, {'source': 'Mira Dontcheva', 'target': 'Matthew Hoffman'}, {'source': 'Mira Dontcheva', 'target': 'Seth Walker'}, {'source': 'Mira Dontcheva', 'target': 'Alan Wilson'}, {'source': 'Matthew Hoffman', 'target': 'Seth Walker'}, {'source': 'Matthew Hoffman', 'target': 'Alan Wilson'}, {'source': 'Seth Walker', 'target': 'Alan Wilson'}], [{'source': 'Donghao Ren', 'target': 'Saleema Amershi'}, {'source': 'Donghao Ren', 'target': 'Bongshin Lee'}, {'source': 'Donghao Ren', 'target': 'Jina Suh'}, {'source': 'Donghao Ren', 'target': 'Jason D. Williams'}, {'source': 'Saleema Amershi', 'target': 'Bongshin Lee'}, {'source': 'Saleema Amershi', 'target': 'Jina Suh'}, {'source': 'Saleema Amershi', 'target': 'Jason D. Williams'}, {'source': 'Bongshin Lee', 'target': 'Jina Suh'}, {'source': 'Bongshin Lee', 'target': 'Jason D. Williams'}, {'source': 'Jina Suh', 'target': 'Jason D. Williams'}], [{'source': 'Gary K. L. Tam', 'target': 'Vivek Kothari'}, {'source': 'Gary K. L. Tam', 'target': 'Min Chen'}, {'source': 'Vivek Kothari', 'target': 'Min Chen'}], [{'source': 'Junpeng Wang', 'target': 'Xiaotong Liu'}, {'source': 'Junpeng Wang', 'target': 'Han-Wei Shen'}, {'source': 'Junpeng Wang', 'target': 'Guang Lin'}, {'source': 'Xiaotong Liu', 'target': 'Han-Wei Shen'}, {'source': 'Xiaotong Liu', 'target': 'Guang Lin'}, {'source': 'Han-Wei Shen', 'target': 'Guang Lin'}], [{'source': 'Mengchen Liu', 'target': 'Jiaxin Shi'}, {'source': 'Mengchen Liu', 'target': 'Zhen Li'}, {'source': 'Mengchen Liu', 'target': 'Chongxuan Li'}, {'source': 'Mengchen Liu', 'target': 'Jun Zhu'}, {'source': 'Mengchen Liu', 'target': 'Shixia Liu'}, {'source': 'Jiaxin Shi', 'target': 'Zhen Li'}, {'source': 'Jiaxin Shi', 'target': 'Chongxuan Li'}, {'source': 'Jiaxin Shi', 'target': 'Jun Zhu'}, {'source': 'Jiaxin Shi', 'target': 'Shixia Liu'}, {'source': 'Zhen Li', 'target': 'Chongxuan Li'}, {'source': 'Zhen Li', 'target': 'Jun Zhu'}, {'source': 'Zhen Li', 'target': 'Shixia Liu'}, {'source': 'Chongxuan Li', 'target': 'Jun Zhu'}, {'source': 'Chongxuan Li', 'target': 'Shixia Liu'}, {'source': 'Jun Zhu', 'target': 'Shixia Liu'}], [{'source': 'Paulo E. Rauber', 'target': 'Samuel G. Fadel'}, {'source': 'Paulo E. Rauber', 'target': 'Alexandre X. Falcão'}, {'source': 'Paulo E. Rauber', 'target': 'Alexandru C. Telea'}, {'source': 'Samuel G. Fadel', 'target': 'Alexandre X. Falcão'}, {'source': 'Samuel G. Fadel', 'target': 'Alexandru C. Telea'}, {'source': 'Alexandre X. Falcão', 'target': 'Alexandru C. Telea'}], [{'source': 'Po-Ming Law', 'target': 'Wenchao Wu'}, {'source': 'Po-Ming Law', 'target': 'Yixian Zheng'}, {'source': 'Po-Ming Law', 'target': 'Huamin Qu'}, {'source': 'Wenchao Wu', 'target': 'Yixian Zheng'}, {'source': 'Wenchao Wu', 'target': 'Huamin Qu'}, {'source': 'Yixian Zheng', 'target': 'Huamin Qu'}], [{'source': 'Sriram Karthik Badam', 'target': 'Fereshteh Amini'}, {'source': 'Sriram Karthik Badam', 'target': 'Niklas Elmqvist'}, {'source': 'Sriram Karthik Badam', 'target': 'Pourang Irani'}, {'source': 'Fereshteh Amini', 'target': 'Niklas Elmqvist'}, {'source': 'Fereshteh Amini', 'target': 'Pourang Irani'}, {'source': 'Niklas Elmqvist', 'target': 'Pourang Irani'}], [{'source': 'Florian Heimerl', 'target': 'Markus John'}, {'source': 'Florian Heimerl', 'target': 'Qi Han'}, {'source': 'Florian Heimerl', 'target': 'Steffen Koch'}, {'source': 'Florian Heimerl', 'target': 'Thomas Ertl'}, {'source': 'Markus John', 'target': 'Qi Han'}, {'source': 'Markus John', 'target': 'Steffen Koch'}, {'source': 'Markus John', 'target': 'Thomas Ertl'}, {'source': 'Qi Han', 'target': 'Steffen Koch'}, {'source': 'Qi Han', 'target': 'Thomas Ertl'}, {'source': 'Steffen Koch', 'target': 'Thomas Ertl'}], [{'source': 'Ji Hwan Park', 'target': 'Saad Nadeem'}, {'source': 'Ji Hwan Park', 'target': 'Seyedkoosha Mirhosseini'}, {'source': 'Ji Hwan Park', 'target': 'Arie Kaufman'}, {'source': 'Saad Nadeem', 'target': 'Seyedkoosha Mirhosseini'}, {'source': 'Saad Nadeem', 'target': 'Arie Kaufman'}, {'source': 'Seyedkoosha Mirhosseini', 'target': 'Arie Kaufman'}], [{'source': 'David McColgin', 'target': 'Paul Hoover'}, {'source': 'David McColgin', 'target': 'Mark Igra'}, {'source': 'Paul Hoover', 'target': 'Mark Igra'}], [{'source': 'Siming Chen', 'target': 'Shuai Chen'}, {'source': 'Siming Chen', 'target': 'Zhenhuang Wang'}, {'source': 'Siming Chen', 'target': 'Jie Liang'}, {'source': 'Siming Chen', 'target': 'Xiaoru Yuan'}, {'source': 'Siming Chen', 'target': 'Nan Cao'}, {'source': 'Siming Chen', 'target': 'Yadong Wu'}, {'source': 'Shuai Chen', 'target': 'Zhenhuang Wang'}, {'source': 'Shuai Chen', 'target': 'Jie Liang'}, {'source': 'Shuai Chen', 'target': 'Xiaoru Yuan'}, {'source': 'Shuai Chen', 'target': 'Nan Cao'}, {'source': 'Shuai Chen', 'target': 'Yadong Wu'}, {'source': 'Zhenhuang Wang', 'target': 'Jie Liang'}, {'source': 'Zhenhuang Wang', 'target': 'Xiaoru Yuan'}, {'source': 'Zhenhuang Wang', 'target': 'Nan Cao'}, {'source': 'Zhenhuang Wang', 'target': 'Yadong Wu'}, {'source': 'Jie Liang', 'target': 'Xiaoru Yuan'}, {'source': 'Jie Liang', 'target': 'Nan Cao'}, {'source': 'Jie Liang', 'target': 'Yadong Wu'}, {'source': 'Xiaoru Yuan', 'target': 'Nan Cao'}, {'source': 'Xiaoru Yuan', 'target': 'Yadong Wu'}, {'source': 'Nan Cao', 'target': 'Yadong Wu'}], [{'source': 'Xiting Wang', 'target': 'Shixia Liu'}, {'source': 'Xiting Wang', 'target': 'Yang Chen'}, {'source': 'Xiting Wang', 'target': 'Tai-Quan Peng'}, {'source': 'Xiting Wang', 'target': 'Jing Su'}, {'source': 'Xiting Wang', 'target': 'Jing Yang'}, {'source': 'Xiting Wang', 'target': 'Baining Guo'}, {'source': 'Shixia Liu', 'target': 'Yang Chen'}, {'source': 'Shixia Liu', 'target': 'Tai-Quan Peng'}, {'source': 'Shixia Liu', 'target': 'Jing Su'}, {'source': 'Shixia Liu', 'target': 'Jing Yang'}, {'source': 'Shixia Liu', 'target': 'Baining Guo'}, {'source': 'Yang Chen', 'target': 'Tai-Quan Peng'}, {'source': 'Yang Chen', 'target': 'Jing Su'}, {'source': 'Yang Chen', 'target': 'Jing Yang'}, {'source': 'Yang Chen', 'target': 'Baining Guo'}, {'source': 'Tai-Quan Peng', 'target': 'Jing Su'}, {'source': 'Tai-Quan Peng', 'target': 'Jing Yang'}, {'source': 'Tai-Quan Peng', 'target': 'Baining Guo'}, {'source': 'Jing Su', 'target': 'Jing Yang'}, {'source': 'Jing Su', 'target': 'Baining Guo'}, {'source': 'Jing Yang', 'target': 'Baining Guo'}], [{'source': 'Fan Du', 'target': 'Catherine Plaisant'}, {'source': 'Fan Du', 'target': 'Neil Spring'}, {'source': 'Fan Du', 'target': 'Ben Shneiderman'}, {'source': 'Catherine Plaisant', 'target': 'Neil Spring'}, {'source': 'Catherine Plaisant', 'target': 'Ben Shneiderman'}, {'source': 'Neil Spring', 'target': 'Ben Shneiderman'}], [{'source': 'Xiaotong Liu', 'target': 'Anbang Xu'}, {'source': 'Xiaotong Liu', 'target': 'Liang Gou'}, {'source': 'Xiaotong Liu', 'target': 'Haibin Liu'}, {'source': 'Xiaotong Liu', 'target': 'Rama Akkiraju'}, {'source': 'Xiaotong Liu', 'target': 'Han-Wei Shen'}, {'source': 'Anbang Xu', 'target': 'Liang Gou'}, {'source': 'Anbang Xu', 'target': 'Haibin Liu'}, {'source': 'Anbang Xu', 'target': 'Rama Akkiraju'}, {'source': 'Anbang Xu', 'target': 'Han-Wei Shen'}, {'source': 'Liang Gou', 'target': 'Haibin Liu'}, {'source': 'Liang Gou', 'target': 'Rama Akkiraju'}, {'source': 'Liang Gou', 'target': 'Han-Wei Shen'}, {'source': 'Haibin Liu', 'target': 'Rama Akkiraju'}, {'source': 'Haibin Liu', 'target': 'Han-Wei Shen'}, {'source': 'Rama Akkiraju', 'target': 'Han-Wei Shen'}], [{'source': 'Jing Xia', 'target': 'Wei Chen'}, {'source': 'Jing Xia', 'target': 'Yumeng Hou'}, {'source': 'Jing Xia', 'target': 'Wanqi Hu'}, {'source': 'Jing Xia', 'target': 'Xinxin Huang'}, {'source': 'Jing Xia', 'target': 'David S. Ebertk'}, {'source': 'Wei Chen', 'target': 'Yumeng Hou'}, {'source': 'Wei Chen', 'target': 'Wanqi Hu'}, {'source': 'Wei Chen', 'target': 'Xinxin Huang'}, {'source': 'Wei Chen', 'target': 'David S. Ebertk'}, {'source': 'Yumeng Hou', 'target': 'Wanqi Hu'}, {'source': 'Yumeng Hou', 'target': 'Xinxin Huang'}, {'source': 'Yumeng Hou', 'target': 'David S. Ebertk'}, {'source': 'Wanqi Hu', 'target': 'Xinxin Huang'}, {'source': 'Wanqi Hu', 'target': 'David S. Ebertk'}, {'source': 'Xinxin Huang', 'target': 'David S. Ebertk'}], [{'source': 'Phong H. Nguyen', 'target': 'Kai Xu'}, {'source': 'Phong H. Nguyen', 'target': 'Andy Bardill'}, {'source': 'Phong H. Nguyen', 'target': 'Betul Salman'}, {'source': 'Phong H. Nguyen', 'target': 'Kate Herd'}, {'source': 'Phong H. Nguyen', 'target': 'B.L. William Wong'}, {'source': 'Kai Xu', 'target': 'Andy Bardill'}, {'source': 'Kai Xu', 'target': 'Betul Salman'}, {'source': 'Kai Xu', 'target': 'Kate Herd'}, {'source': 'Kai Xu', 'target': 'B.L. William Wong'}, {'source': 'Andy Bardill', 'target': 'Betul Salman'}, {'source': 'Andy Bardill', 'target': 'Kate Herd'}, {'source': 'Andy Bardill', 'target': 'B.L. William Wong'}, {'source': 'Betul Salman', 'target': 'Kate Herd'}, {'source': 'Betul Salman', 'target': 'B.L. William Wong'}, {'source': 'Kate Herd', 'target': 'B.L. William Wong'}], [{'source': 'Johannes Weissenböck', 'target': 'Artem Amirkhanov'}, {'source': 'Johannes Weissenböck', 'target': 'Eduard Gröller'}, {'source': 'Johannes Weissenböck', 'target': 'Johann Kastner'}, {'source': 'Johannes Weissenböck', 'target': 'Christoph Heinzl'}, {'source': 'Artem Amirkhanov', 'target': 'Eduard Gröller'}, {'source': 'Artem Amirkhanov', 'target': 'Johann Kastner'}, {'source': 'Artem Amirkhanov', 'target': 'Christoph Heinzl'}, {'source': 'Eduard Gröller', 'target': 'Johann Kastner'}, {'source': 'Eduard Gröller', 'target': 'Christoph Heinzl'}, {'source': 'Johann Kastner', 'target': 'Christoph Heinzl'}], [{'source': 'Yuanzhe Chen', 'target': 'Qing Chen'}, {'source': 'Yuanzhe Chen', 'target': 'Mingqian Zhao'}, {'source': 'Yuanzhe Chen', 'target': 'Sebastien Boyer'}, {'source': 'Yuanzhe Chen', 'target': 'Kalyan Veeramachaneni'}, {'source': 'Yuanzhe Chen', 'target': 'Huamin Qu'}, {'source': 'Qing Chen', 'target': 'Mingqian Zhao'}, {'source': 'Qing Chen', 'target': 'Sebastien Boyer'}, {'source': 'Qing Chen', 'target': 'Kalyan Veeramachaneni'}, {'source': 'Qing Chen', 'target': 'Huamin Qu'}, {'source': 'Mingqian Zhao', 'target': 'Sebastien Boyer'}, {'source': 'Mingqian Zhao', 'target': 'Kalyan Veeramachaneni'}, {'source': 'Mingqian Zhao', 'target': 'Huamin Qu'}, {'source': 'Sebastien Boyer', 'target': 'Kalyan Veeramachaneni'}, {'source': 'Sebastien Boyer', 'target': 'Huamin Qu'}, {'source': 'Kalyan Veeramachaneni', 'target': 'Huamin Qu'}], [{'source': 'Prithiviraj K. Muthumanickam', 'target': 'Katerina Vrotsou'}, {'source': 'Prithiviraj K. Muthumanickam', 'target': 'Matthew Cooper'}, {'source': 'Prithiviraj K. Muthumanickam', 'target': 'Jimmy Johansson'}, {'source': 'Katerina Vrotsou', 'target': 'Matthew Cooper'}, {'source': 'Katerina Vrotsou', 'target': 'Jimmy Johansson'}, {'source': 'Matthew Cooper', 'target': 'Jimmy Johansson'}], [{'source': 'Michael Correll', 'target': 'Michael Gleicher'}], [{'source': 'Tanja Blascheck', 'target': 'Fabian Beck'}, {'source': 'Tanja Blascheck', 'target': 'Sebastian Baltes'}, {'source': 'Tanja Blascheck', 'target': 'Thomas Ertl'}, {'source': 'Tanja Blascheck', 'target': 'Daniel Weiskopf'}, {'source': 'Fabian Beck', 'target': 'Sebastian Baltes'}, {'source': 'Fabian Beck', 'target': 'Thomas Ertl'}, {'source': 'Fabian Beck', 'target': 'Daniel Weiskopf'}, {'source': 'Sebastian Baltes', 'target': 'Thomas Ertl'}, {'source': 'Sebastian Baltes', 'target': 'Daniel Weiskopf'}, {'source': 'Thomas Ertl', 'target': 'Daniel Weiskopf'}]]

G = nx.Graph()
for i in range(0,len(authorArr)):
    G.add_node(i)

for author_link_year_arr in author_link_arr:
    for author_link_year in author_link_year_arr:
        G.add_edge(authorArr.index(author_link_year["source"]), authorArr.index(author_link_year["target"]), w=1)
    # print(1)


# print(len(nx.random_partition_graph([10, 10, 10], 0.8, 0.1)))

# plot the graph
fig, ax = plt.subplots(figsize=(5,5))
option = {'font_family':'serif', 'font_size':'15', 'font_weight':'semibold'}
nx.draw_networkx(G, node_size=400, **option)  # pos=nx.spring_layout(G)
plt.axis('off')
plt.show()

class arguments():
    def __init__(self):
        self.no_cuda = True        # Disables CUDA training
        self.seed = 24             # Random seed
        self.lr = 0.001            # Initial learning rate
        self.weight_decay = 5e-4   # Weight decay (L2 loss on parameters)
        self.hidden = 50           # Number of hidden units
        self.embed_dim = 50        # Dimensionality of node embeddings
        self.dropout = 0.5         # Dropout rate (1 - keep probability)
        self.K = 18                 # How many partitions
        self.clustertemp = 100     # how hard to make the softmax for the cluster assignments
        self.train_iters = 301     # number of training iterations
        self.num_cluster_iter = 1  # number of iterations for clustering

args = arguments()
args.cuda = not args.no_cuda and torch.cuda.is_available()

## Load data
adj_all, features = load_data(G=G)   # normalized adjacency matrix
bin_adj_all = (adj_all.to_dense() > 0).float()   # standard adjacency matrix
test_object = make_modularity_matrix(bin_adj_all)

# features = load_data(G=G)   # normalized adjacency matrix
# bin_adj_all = torch.eye(len(G.nodes()),30)
# test_object = make_modularity_matrix(bin_adj_all)
nfeat = features.shape[1]
num_cluster_iter = args.num_cluster_iter
K = args.K
print("————————————————————SSSSSSSSSSSSSSSSSSSSSSSSSSSS————————————————————")
print(adj_all)
print("————————————————————EEEEEEEEEEEEEEEEEEEEEEEEEEEE————————————————————")

# print(features)
# print(features[1][1])
print("————————————————————EEEEEEEEEEEEEEEEEEEEEEEEEEEE————————————————————")
## INITIALIZE MODELS
model_cluster = GCNClusterNet(nfeat=nfeat,
                              nhid=args.hidden,
                              nout=args.embed_dim,
                              dropout=args.dropout,
                              K=args.K,
                              cluster_temp=args.clustertemp)

optimizer = optim.Adam(model_cluster.parameters(),
                       lr=args.lr,
                       weight_decay=args.weight_decay)

if args.cuda:
    model_cluster.cuda()
    adj_all = adj_all.cuda()
    features = features.cuda()
    bin_adj_all = bin_adj_all.cuda()
    test_object = test_object.cuda()

losses = []
losses_test = []

## Decision-focused training
best_train_val = 100
for t in range(args.train_iters):
    # optimization setting: get loss with respect to the full graph
    mu, r, embeds, dist = model_cluster(features, adj_all, num_cluster_iter)

    loss = loss_modularity(r, bin_adj_all, test_object)
    loss = -loss
    optimizer.zero_grad()
    loss.backward()

    # increase number of clustering iterations after 200 updates to fine-tune solution
    if t == 200:
        num_cluster_iter = 5

    # every 100 iterations, look and see if we've improved on the best training loss
    # seen so far. Keep the solution with best training value.
    if t % 100 == 0:
        # round solution to discrete partitioning
        r = torch.softmax(100 * r, dim=1)

        # evalaute test loss -- note that the best solution is
        # chosen with respect training loss. Here, we store the test loss
        # of the currently best training solution
        loss_test = loss_modularity(r, bin_adj_all, test_object)

        # training loss, to do rounding after
        if loss.item() < best_train_val:
            best_train_val = loss.item()
        curr_test_loss = loss_test.item()

        log = 'Iterations: {:03d}, ClusterNet modularity: {:.4f}'
        print(log.format(t, curr_test_loss))
    losses.append(loss.item())
    optimizer.step()

# file_handle=open('1.txt',mode='w')#w 写入模式
# #将tensor变量转化为numpy类型
# x = r.tensor.detach().numpy()
# #将numpy类型转化为list类型
# x=x.tolist()
# #将list转化为string类型
# strNums=[str(x_i) for x_i in x]
# str1=",".join(strNums)
# #将str类型数据存入本地文件1.txt中
# file_handle.write(str1)

# file_handle=open('result1.txt',mode='w')
# file_handle.write(r)
print(r)
np.savetxt("result18.csv",r.detach().numpy())

